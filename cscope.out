cscope 15 $HOME/brt               0000178736
	@bitmaps.c

2 
	~"rubix_mkfs.h
"

3 
	~"rubix_fûe_sy°em.h
"

7 
uöt64_t
 
	$Æloc_dblock_‰om_bôm≠
(
su≥r_block
 *
sb
)

9 
i
,
j
,
off£t
,
k
;

10 
uöt64_t
 *
bm≠
;

11 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

12 
buf„r_hód
 *
bh
;

14 
i
=0;i<
sbi
->
m≠_¨øys
;i++)

17 
bh
 = *(
sbi
->
bbm≠
 + 
i
);

19 
	`¥ötk
("buf„r_hód1 :%p",
bh
);

20 
j
=0;j<128;j++)

25 
off£t
 = 
j
 * 8;

26 
bm≠
 = (
uöt64_t
*)(
bh
->
b_d©a
 + 
off£t
);

28 
	`BUG_ON
(
bm≠
 =
NULL
);

30 
k
=0;k<64;k++)

32 if(!((*
bm≠
Ë& (1ULL <<
k
)))

36 (*
bm≠
Ë|(1ULL <<
k
);

37 
i
 = (ò* 8 * 
sb
->
s_blocksize
Ë+ (
j
 * 64Ë+ 
k
;

38 
	`¥ötk
("Rëu∫ög :%Œu\n", 
i
 + 2 * 
sbi
->
m≠_¨øys
 + 4);

39 
	`¥ötk
("buf„r_hód2 :%p",
bh
);

40 
	`m¨k_buf„r_dúty
(
bh
);

41  (
i
 + 
sbi
->
mëa_d©a_blks
);

48 
	}
}

50 
uöt64_t
 
	$Æloc_öode_‰om_bôm≠
(
su≥r_block
 *
sb
)

52 
i
,
j
,
off£t
,
k
;

53 
uöt64_t
 *
ibm≠
;

54 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

55 
buf„r_hód
 *
bh
;

56 
uöt8_t
 *
ã°_byã
;

58 
i
=0;i<
sbi
->
m≠_¨øys
;i++)

60 
bh
 = *(
sbi
->
ibm≠
 +
i
);

61 
ã°_byã
 = (
uöt8_t
 *)
bh
->
b_d©a
;

62 
	`¥ötk
("whûêÆloˇtög ..:%u \n",*
ã°_byã
);

64 
j
=0;j<128;j++)

66 
off£t
 = 
j
 * 8;

67 
ibm≠
 = (
uöt64_t
*)(
bh
->
b_d©a
 + 
off£t
);

69 
	`BUG_ON
(
ibm≠
 =
NULL
);

71 
k
=0;

72 if(
i
 =0 && 
j
 =0Ë
k
++;

73 ;
k
<64;k++)

75 if(!((*
ibm≠
Ë& (1ULL <<
k
)))

79 (*
ibm≠
Ë|(1ULL <<
k
);

80 
i
 = (ò* 8 * 
sb
->
s_blocksize
Ë+ (
j
 * 64Ë+ 
k
;

81 
	`m¨k_buf„r_dúty
(
bh
);

82 
	`¥ötk
("globÆ_öodê:%d \n",
i
);

83  
i
 ;

89 
	}
}

124 
	$˛ór_öode_bôm≠
(
su≥r_block
 *
sb
, 
öo
)

126 
uöt64_t
 
mod
,
ba£
;

127 
buf„r_hód
 *
bh
;

128 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

129 
uöt64_t
 *
ibm≠
;

131 
mod
 = 
öo
 % (8 * 
sb
->
s_blocksize
);

132 
ba£
 = 
öo
 / (8 * 
sb
->
s_blocksize
);

133 
bh
 = *(
sbi
->
ibm≠
 + 
ba£
);

134 
mod
 = mod %8 ;

135 
ba£
 = 
mod
/64;

136 
ibm≠
 = (
uöt64_t
 *)(
bh
->
b_d©a
 + (
ba£
 * 8));

137 
	`¥ötk
("mod:%Œu \n",
mod
);

139 
	`BUG_ON
(!((*
ibm≠
Ë| (1ULL << 
mod
)));

140 (*
ibm≠
Ë&~(1ULL << 
mod
);

142 
	`BUG_ON
((*
ibm≠
Ë& (1ULL << 
mod
));

144 
	`m¨k_buf„r_dúty
(
bh
);

147 
	}
}

150 
	$˛ór_dblock_bôm≠
(
su≥r_block
 *
sb
, 
uöt64_t
 
block
)

152 
uöt64_t
 
mod
,
ba£
;

153 
buf„r_hód
 *
bh
;

154 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

155 
uöt64_t
 *
bm≠
;

158 
	`BUG_ON
(
block
 == 0);

160 
mod
 = (
block
 - (
sbi
->
mëa_d©a_blks
)Ë% (8 * 
sb
->
s_blocksize
);

161 
ba£
 = (
block
- (
sbi
->
mëa_d©a_blks
)Ë/ (8 * 
sb
->
s_blocksize
);

162 
	`¥ötk
("block :%Œu mod†:%Œu ba£:%Œu \n",
block
,
mod
,
ba£
);

163 
	`BUG_ON
(
mod
 < 0);

164 
	`BUG_ON
(
ba£
 < 0);

166 
bh
 = *(
sbi
->
bbm≠
 + 
ba£
);

167 
mod
 = mod %8;

168 
ba£
 = 
mod
/64;

169 
	`¥ötk
("buf„r_hód3 :%p",
bh
);

170 
bm≠
 = (
uöt64_t
 *)(
bh
->
b_d©a
 + (
ba£
 * 8));

171 
	`¥ötk
("bm≠ :%Œu",*
bm≠
);

173 
	`BUG_ON
(!((*
bm≠
Ë| (1ULL << 
mod
)));

174 (*
bm≠
Ë&~(1ULL << 
mod
);

176 
	`BUG_ON
((*
bm≠
Ë& (1ULL << 
mod
));

178 
	`¥ötk
("bm≠ :%Œu",*
bm≠
);

179 
	`m¨k_buf„r_dúty
(
bh
);

180 
	}
}

183 
	$˛ór_ödúe˘_blocks
(
su≥r_block
 *
sb
, 
uöt64_t
 
block
)

185 
buf„r_hód
 *
bh
 ,*
bh1
, *
bh2
;

187 
bh
 = 
	`sb_bªad
(
sb
, 
block
);

189 
	`mem£t
(
bh
->
b_d©a
,0,1024);

190 
	`m¨k_buf„r_dúty
(
bh
);

191 
	`bªl£
(
bh
);

193 
bh1
 = 
	`sb_bªad
(
sb
, 
block
 + 1);

195 
	`mem£t
(
bh1
->
b_d©a
,0,1024);

196 
	`m¨k_buf„r_dúty
(
bh1
);

197 
	`bªl£
(
bh1
);

199 
bh2
 = 
	`sb_bªad
(
sb
, 
block
 + 2);

201 
	`mem£t
(
bh2
->
b_d©a
,0,1024);

202 
	`m¨k_buf„r_dúty
(
bh2
);

203 
	`bªl£
(
bh2
);

204 
	}
}

	@btree.c

3 
	~"båì.h
"

4 
	~"rubix_fûe_sy°em.h
"

58 
båì_node_t
 *
	$¸óã_node
(
key
, 
uöt64_t
 
pba
)

60 
i
;

61 
båì_node_t
 *
node
;

62 
node
 = (
båì_node_t
 *)
	`kmÆloc
((båì_node_t),
GFP_KERNEL
);

63 
node
->
key
[0] = key;

64 
node
->
pba
[0]=Öba;

65 
node
->
‰ì
=1;

66 
i
=0;i<
DEGREE
;i++)

67 
node
->
chûd
[
i
] = 
NULL
;

69  
node
;

70 
	}
}

72 
	$¥öt_båì
(
båì_node_t
 *
roŸ
)

74 
i
;

75 if(
roŸ
 =
NULL
) ;

78 
i
=0;i<=
roŸ
->
‰ì
+1;i++)

80 
	`¥ötk
("%Œu %Œu ",
roŸ
->
key
[
i
],roŸ->
pba
[i]);

82 
	`¥ötk
("\n");

83 
i
=0;i<=
roŸ
->
‰ì
 +1;i++)

85 if(
roŸ
->
chûd
[
i
])

86 
	`¥öt_båì
(
roŸ
->
chûd
[
i
]);

89 
	}
}

91 
	$middÀ_ñemít
(
båì_node_t
 *
roŸ
, *
idx
, 
uöt64_t
 *
pba
)

93 *
idx
 = (
roŸ
->
‰ì
)/2;

94 *
pba
 = 
roŸ
->pba[*
idx
];

95  
roŸ
->
key
[*
idx
];

96 
	}
}

98 
båì_node_t
 *
	$ö£π_öto_åì
(
båì_node_t
 *
∑ª¡
, båì_node_à*
node
, 
uöt64_t
 *
key
, uöt64_à
pba
)

100 
båì_node_t
 *
chûd
,*
À·
;

101 
i
,
idx
,
j
,
mid
;

102 
uöt64_t
 
pba_mid
;

104 if(
node
 =
NULL
) Çode;

105 if(*
key
 =0 )  
node
;

107 
i
 = 
node
->
‰ì
 - 1;

108 
i
 >0 && 
node
->
key
[i] > *key)

110 
i
--;

113 
chûd
 = 
node
->chûd[
i
+1];

117 
	`ö£π_öto_åì
(
node
,
chûd
,
key
, 
pba
);

120 if(*
key
 != 0)

123 
j
 = 
node
->
‰ì
 - 1;

125 
	`¥ötk
("Addög ..:%Œu %Œu\n",*
key
, 
node
->key[
j
+2]);

126 
j
 >0 && 
node
->
key
[j] > *key)

128 
node
->
key
[
j
+1] =Çode->key[j];

129 
node
->
chûd
[
j
+1] =Çode->child[j];

130 
j
--;

132 
node
->
‰ì
++;

133 
node
->
key
[
j
+1] = *key;

134 
node
->
pba
[
j
+1] =Öba;

139 if(
node
->
‰ì
 > 
DEGREE
)

143 
mid
 = 
	`middÀ_ñemít
(
node
, &
idx
, &
pba_mid
);

148 
À·
 = 
	`¸óã_node
(0,0);

150 
i
=0;i<
idx
;i++)

152 
À·
->
key
[
i
] = 
node
->key[i];

153 
À·
->
pba
[
i
] = 
node
->pba[i];

154 
À·
->
chûd
[
i
] = 
node
->child[i];

157 
À·
->
chûd
[
i
] = 
node
->child[i];

159 
À·
->
‰ì
 = 
idx
;

161 
i
=
idx
+1;i<=
node
->
‰ì
;i++)

163 
node
->
key
[
i
- 
idx
 -1] =Çode->key[i];

164 
node
->
pba
[
i
- 
idx
 -1] =Çode->pba[i];

165 
node
->
chûd
[
i
-
idx
 -1] =Çode->child[i];

168 
node
->
‰ì
 =Çode->‰ì - 
idx
 -1 ;

170 
i
=
node
->
‰ì
+1;i<
DEGREE
+2;i++)

172 
node
->
key
[
i
] = 0;

173 
node
->
pba
[
i
] = 0;

174 
node
->
chûd
[
i
]
NULL
;

177 i‡(
∑ª¡
 =
NULL
)

179 
∑ª¡
 = 
	`¸óã_node
(
mid
, 
pba_mid
);

180 
∑ª¡
->
key
[0] = 
mid
;

181 
∑ª¡
->
pba
[0] = 
pba_mid
;

183 *
key
=0;

185 
∑ª¡
->
chûd
[0] = 
À·
;

186 
∑ª¡
->
chûd
[1] = 
node
;

187 
∑ª¡
->
‰ì
=1;

188 
	`¥öt_båì
(
∑ª¡
);

190  
∑ª¡
;

194 
j
 = 
∑ª¡
->
‰ì
-1;

197 
j
 >0 && 
∑ª¡
->
key
[j] > 
mid
)

200 
∑ª¡
->
chûd
[
j
+2] =Öarent->child[j+1];

201 
∑ª¡
->
chûd
[
j
+1] =Öarent->child[j];

202 
∑ª¡
->
key
[
j
+1] =Öarent->key[j];

203 
∑ª¡
->
pba
[
j
+1] =Öarent->pba[j];

204 
j
--;

207 
∑ª¡
->
chûd
[
j
+1] = 
À·
;

208 
∑ª¡
->
chûd
[
j
+2] = 
node
;

209 
∑ª¡
->
key
[
j
+1] = 
mid
;

210 
∑ª¡
->
pba
[
j
+1] = 
pba_mid
;

211 
∑ª¡
->
‰ì
 =Öarent->free + 1;

213 *
key
 = 0;

215  
NULL
;

220 *
key
 = 0;

223  
node
;

224 
	}
}

226 
båì_node_t
 *
	$ö£πi⁄
(
båì_node_t
 *
roŸ
, 
uöt64_t
 
key
, uöt64_à
pba
)

228 
båì_node_t
 *
node
;

230 if(
roŸ
 =
NULL
)

233 
node
 = 
	`¸óã_node
(
key
,
pba
);

235  
node
;

239 
roŸ
 = 
	`ö£π_öto_åì
(
NULL
,ÑoŸ, &
key
, 
pba
);

241  
roŸ
;

242 
	}
}

245 
båì_node_t
 *
	$£¨ch
(
båì_node_t
 *
roŸ
, 
uöt64_t
 
key
, uöt64_à*
idx
, båì_node_à**
∑ª¡
,uöt64_à*
pidx
)

247 
i
;

248 
båì_node_t
 *
node
=
NULL
,*
chûd
;

250 
i
 = 
roŸ
->
‰ì
 - 1;

252 
i
 >0 && 
roŸ
->
key
[i] >= key)

254 
i
--;

257 i‡(
roŸ
->
key
[
i
+1] == key)

259 *
idx
 = 
i
+1;

260  
roŸ
;

264 
chûd
 = 
roŸ
->chûd[
i
+1];

265 if(
chûd
 =
NULL
)

267 *
idx
 =-1;

268  
NULL
;

272 
node
 = 
	`£¨ch
(
chûd
, 
key
, 
idx
, 
∑ª¡
,
pidx
);

274 i‡(
node
 && !*
∑ª¡
)

276 *
∑ª¡
 = 
roŸ
;

277 *
pidx
 = 
i
+1;

279  
node
;

282 
	}
}

284 
båì_node_t
 *
	$£¨ch_node
(
båì_node_t
 *
roŸ
, 
uöt64_t
 
key
, uöt64_à*
idx
)

286 
öt64_t
 
pidx
;

287 
båì_node_t
 *
node
=
NULL
,*
∑ª¡
=NULL;

289 if(
roŸ
 =
NULL
)  NULL;

291 
node
 = 
	`£¨ch
(
roŸ
, 
key
, 
idx
, &
∑ª¡
 ,&
pidx
);

294  
node
;

295 
	}
}

316 
	$˛ór_node
(
båì_node_t
 *
∑ª¡
, båì_node_à*
node
, 
idx
)

318 
	`k‰ì
(
node
);

319 
∑ª¡
->
chûd
[
idx
] = 
NULL
;

320 
	}
}

324 
	$ªcursi⁄
(
båì_node_t
 *
∑ª¡
, båì_node_à*
node
, 
idx
, båì_node_à*
°›
)

326 if(
node
 =
NULL
) ;

328 
	`ªcursi⁄
(
node
,Çode->
chûd
[node->
‰ì
-1], 
idx
, 
°›
);

329 
	`ªcursi⁄
(
node
,Çode->
chûd
[node->
‰ì
],
idx
, 
°›
);

332 if((
node
->
chûd
[node->
‰ì
-1] =
NULL
) && (node->child[node->free] != NULL))

335 
∑ª¡
->
key
[∑ª¡->
‰ì
-1] = 
node
->key[node->free];

336 
node
->
‰ì
--;

338 if(
°›
 =
∑ª¡
)

341 
∑ª¡
->
key
[
idx
] = 
node
->key[node->
‰ì
-1];

342 
node
->
key
[node->
‰ì
-1] = 0;

343 
node
->
‰ì
--;

344 if(
node
->
‰ì
 =0 && 
∑ª¡
)

346 
	`˛ór_node
(
∑ª¡
,
node
,
idx
);

353 
∑ª¡
->
key
[∑ª¡->
‰ì
-1] = 
node
->key[node->free-1];

354 
node
->
key
[node->
‰ì
-1] = 0;

355 
node
->
‰ì
--;

358 
	}
}

360 
båì_node_t
 *
	$ªmove_node
(
båì_node_t
 *
roŸ
, 
uöt64_t
 
key
)

362 
i
;

363 
uöt64_t
 
idx
,
pidx
;

364 
båì_node_t
 *
node
=
NULL
,*
À·
,*
∑ª¡
=NULL;

366 
node
 = 
	`£¨ch
(
roŸ
, 
key
, &
idx
, &
∑ª¡
, &
pidx
);

368 i‡(
node
)

371 if(
node
->
chûd
[
idx
] =
NULL
 &&Çode->child[idx+1] == NULL)

374 
i
=
idx
;i<
DEGREE
+1;i++)

376 
node
->
key
[
i
] =Çode->key[i+1];

377 
node
->
pba
[
i
] =Çode->pba[i+1];

378 
node
->
chûd
[
i
]=Çode->child[i+1];

380 
node
->
‰ì
--;

384 if(
node
->
‰ì
 < 
MIN
)

389 if(
node
->
‰ì
 =0 && 
∑ª¡
)

391 
	`˛ór_node
(
∑ª¡
,
node
,
pidx
);

394  
roŸ
;

397 i‡(
node
->
chûd
[
idx
])

400 
À·
 = 
node
->
chûd
[
idx
];

402 
	`ªcursi⁄
(
node
, 
À·
, 
idx
,Çode);

409 
	`¥ötk
("Couldnt find ..\n");

411  
roŸ
;

412 
	}
}

414 
	$c›y_ñemíts
(
båì_node_t
 *
node
, båì_node_à*
√w
 , 
key
, båì_node_à*
¡
, 
uöt64_t
 
pba
)

416 
i
;

417 
i
=0;i<
key
;i++)

419 
√w
->
key
[
i
] = 
node
->key[i];

420 
√w
->
pba
[
i
] = 
node
->pba[i];

421 
√w
->
chûd
[
i
] = 
node
->child[i];

423 
√w
->
key
[
i
] = 
node
->key[i];

424 
√w
->
pba
[
i
] =Öba;

425 
√w
->
chûd
[
i
] = 
¡
;

427 
i
=
key
 + 1; i <
node
->
‰ì
;i++)

429 
√w
->
key
[
i
] = 
node
->key[i];

430 
√w
->
pba
[
i
] = 
node
->pba[i];

431 
√w
->
chûd
[
i
] = 
node
->child[i];

434 
√w
->
dúty
=1;

435 
node
->
dúty
=1;

436 
	}
}

440 
båì_node_t
 *
	$£¨ch_wrôe_modifiˇti⁄
(
båì_node_t
 *
roŸ
, 
key
, 
uöt64_t
 
pba
)

442 
i
;

443 
båì_node_t
 *
node
=
NULL
,*
chûd
,*
√w_node
;

445 
i
 = 
roŸ
->
‰ì
 - 1;

447 
i
 >0 && 
roŸ
->
key
[i] >= key)

449 
i
--;

452 i‡(
roŸ
->
key
[
i
+1] == key)

455 
√w_node
 = 
	`¸óã_node
(0,0);

457 
	`c›y_ñemíts
(
roŸ
,
√w_node
, 
i
+1,
NULL
, 
pba
);

458  
√w_node
;

462 
chûd
 = 
roŸ
->chûd[
i
+1];

463 if(
chûd
 =
NULL
)

465  
NULL
;

469 
node
 = 
	`£¨ch_wrôe_modifiˇti⁄
(
chûd
, 
key
 ,
pba
);

471 if(
node
)

473 
√w_node
 = 
	`¸óã_node
(0,0);

475 
	`c›y_ñemíts
(
roŸ
,
√w_node
, 
i
+1,
node
,
pba
);

476  
√w_node
;

480  
node
;

484 
	}
}

487 
båì_node_t
 *
	$ö£π_båì_node
(
båì_node_t
 *
roŸ
, 
uöt64_t
 
lba
 , uöt64_à
pba
)

491 
roŸ
 = 
	`ö£πi⁄
‘oŸ, 
lba
, 
pba
);

492 
	`¥öt_båì
(
roŸ
);

493  
roŸ
;

494 
	}
}

497 
	$max_dïth
(*
dïth
)

499 
max
 = 
dïth
[0],
i
;

501 
i
=1;i<
DEGREE
;i++)

503 if(
max
 < 
dïth
[
i
])

504 
max
 = 
dïth
[
i
];

506  
max
;

507 
	}
}

509 
	$ˇlcuœã_dïth
(
båì_node_t
 *
node
)

511 
dïth
[
DEGREE
];

512 
i
;

514 if(
node
 =
NULL
 )  0;

516 
i
=0;i<
DEGREE
;i++)

518 
dïth
[
i
] = 1 + 
	`ˇlcuœã_dïth
(
node
->
chûd
[i]);

520 
	`max_dïth
(
dïth
);

522 
	}
}

524 
	$Àvñ_‹dî
(
båì_node_t
 *
node
, 
d
)

526 
i
;

527 if(
node
 =
NULL
)

530 if(
d
 == 0)

532 
	`¥ötk
("%Œu \n",
node
->
key
[0]);

536 
i
=0;i<
DEGREE
;i++)

538 
	`Àvñ_‹dî
(
node
->
chûd
[
i
], 
d
-1);

541 
	}
}

543 
	$wrôe_Àvñ_‹dî_disk
(
båì_node_t
 *
roŸ
)

545 
i
;

546 
dïth
 = 
	`ˇlcuœã_dïth
(
roŸ
);

548 
	`¥ötk
("dïth:%d\n",
dïth
);

550 
i
=0;i<
dïth
;i++)

552 
	`Àvñ_‹dî
(
roŸ
, 
i
);

555 
	}
}

	@btree.h

1 #i‡!
deföed
 
__BTREE_H__


2 
	#__BTREE_H__


	)

3 
	~"rubix_fûe_sy°em.h
"

4 
	#DEGREE
 3

	)

5 
	#MIN
 2

8 
	s__båì_node_


	)

10 
uöt64_t
 
	mkey
[
DEGREE
 +1];

11 
uöt64_t
 
	mpba
[
DEGREE
+1];

12 
__båì_node_
 *
	mchûd
[
DEGREE
 + 2];

13 
	m‰ì
;

14 
	mªf_cou¡
;

15 
	mdúty
;

16 }
	tbåì_node_t
;

	@rbtree.c

1 
	~"båì.h
"

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

10 
	srbåì_node_


12 
	mkey
;

13 
	mblock
;

14 
rbåì_node_
 *
	m∑ª¡
;

15 
rbåì_node_
 *
	mright
;

16 
rbåì_node_
 *
	mÀ·
;

17 íum {
	mRED
,
	mBLACK
}
	mcﬁ‹
;

18 }
	trbåì_node_t
;

23 
	$¥öt_ö‹dî
(
rbåì_node_t
 *
roŸ
)

25 if(
roŸ
 =
NULL
) ;

28 
	`¥öt_ö‹dî
(
roŸ
->
À·
);

29 
	`¥ötf
("%d :%d \n",
roŸ
->
key
,roŸ->
cﬁ‹
);

30 
	`¥öt_ö‹dî
(
roŸ
->
right
);

32 
	}
}

35 
	$£¨ch_rbåì
(
rbåì_node_t
 *
roŸ
, 
key
)

37 if(
roŸ
 =
NULL
)  0;

39 if(
key
 =
roŸ
->key)  1;

42 if(
roŸ
->
key
 > key)

44 if(
	`£¨ch_rbåì
(
roŸ
->
À·
, 
key
))

51 if(
	`£¨ch_rbåì
(
roŸ
->
right
, 
key
))

57 
	}
}

60 
rbåì_node_t
 *
	$gë_gønd∑ª¡
(
rbåì_node_t
 *
node
)

62  
node
->
∑ª¡
->parent;

63 
	}
}

65 
rbåì_node_t
 *
	$gë_∑ª¡
(
rbåì_node_t
 *
node
)

67  
node
->
∑ª¡
;

68 
	}
}

70 
rbåì_node_t
 *
	$gë_un˛e
(
rbåì_node_t
 *
node
)

72 
rbåì_node_t
 *
g
 = 
	`gë_gønd∑ª¡
(
node
);

73 if(
g
 =
NULL
)

74  
NULL
;

75 if(
node
->
∑ª¡
 =
g
->
À·
)

76  
g
->
right
;

78 if(
node
->
∑ª¡
 =
g
->
right
)

79  
g
->
À·
;

82 
	}
}

95 
rbåì_node_t
 *
	$À·_rŸ©i⁄
(
rbåì_node_t
 *
√w
)

97 
rbåì_node_t
 *
tmp
,*
À·
;

99 
tmp
 = 
√w
->
right
;

100 
À·
 = 
tmp
->left;

101 
√w
->
right
 = 
À·
;

102 if(
À·
)

103 
À·
->
∑ª¡
 = 
√w
;

104 
tmp
->
À·
 = 
√w
;

105 if(
√w
)

106 
√w
->
∑ª¡
 = 
tmp
;

108  
tmp
;

109 
	}
}

120 
rbåì_node_t
 *
	$right_rŸ©i⁄
(
rbåì_node_t
 *
√w
)

122 
rbåì_node_t
 *
tmp
,*
right
;

124 
tmp
 = 
√w
->
À·
;

125 
right
 = 
tmp
->right;

126 
√w
->
À·
 = 
right
;

127 if(
right
)

128 
right
->
∑ª¡
 =
√w
;

129 
tmp
->
right
 = 
√w
;

130 if(
√w
)

131 
√w
->
∑ª¡
 = 
tmp
;

133  
tmp
;

134 
	}
}

136 
rbåì_node_t
 *
	$¸óã_node
(
key
,
pba
)

138 
rbåì_node_t
 *
node
 = (rbåì_node_à*)
	`mÆloc
((rbtree_node_t));

139 
node
->
key
 = key;

140 
node
->
block
 = 
pba
;

141 
node
->
∑ª¡

NULL
;

142 
node
->
right
 = 
NULL
;

143 
node
->
À·
 = 
NULL
;

145  
node
;

146 
	}
}

148 
rbåì_node_t
 *
	$ö£π_öto_åì
(
rbåì_node_t
 *
roŸ
,rbåì_node_à*
node
)

150 
Êag
= -1;

151 
rbåì_node_t
 *
cur
,*
∑ª¡
=
roŸ
;

152 
cur
 = 
roŸ
;

153 
cur
)

155 i‡(
cur
->
key
 < 
node
->key)

157 
∑ª¡
 = 
cur
;

158 
cur
 = cur->
right
;

159 
Êag
=1;

161 if(
cur
->
key
 > 
node
->key)

163 
∑ª¡
 = 
cur
;

164 
cur
 = cur->
À·
;

165 
Êag
=0;

169 if(
Êag
)

171 
∑ª¡
->
right
 = 
node
;

172 
node
->
∑ª¡
 =Öarent;

176 
∑ª¡
->
À·
 = 
node
;

177 
node
->
∑ª¡
 =Öarent;

180  
roŸ
;

181 
	}
}

189 
rbåì_node_t
 *
	$adju°_rbåì
(
rbåì_node_t
 *
roŸ
,Ñbåì_node_à*
node
)

191 
rbåì_node_t
 *
u
,*
g
,*
tmp
;

192 
À·
=0;

194 if(
node
->
∑ª¡
 =
NULL
)

196 
node
->
cﬁ‹
 = 
BLACK
;

197  
node
;

201 i‡(
node
->
∑ª¡
->
cﬁ‹
 =
BLACK
)

203  
roŸ
;

207 
u
 = 
	`gë_un˛e
(
node
);

208 i‡((
u
 !
NULL
Ë&& (u->
cﬁ‹
 =
RED
))

210 
node
->
∑ª¡
->
cﬁ‹
 = 
BLACK
;

211 
u
->
cﬁ‹
 = 
BLACK
;

212 
g
 = 
	`gë_gønd∑ª¡
(
node
);

213 
g
->
cﬁ‹
 = 
RED
;

214  
	`adju°_rbåì
(
roŸ
,
g
);

218 
g
 = 
	`gë_gønd∑ª¡
(
node
);

220 i‡((
node
 =node->
∑ª¡
->
right
Ë&& (node->∑ª¡ =
g
->
À·
))

222 
À·
=0;

223 
tmp
 = 
node
->
∑ª¡
->parent;

224 if(
tmp
 &&Åmp->
À·
 =
node
->
∑ª¡
)

226 
À·
 =1;

228 
node
 = 
	`À·_rŸ©i⁄
“ode->
∑ª¡
);

229 if(
tmp
)

231 if(
À·
)

232 
tmp
->
À·
 = 
node
;

234 
tmp
->
right
 = 
node
;

236 
node
->
∑ª¡
 = 
tmp
;

237 
node
 =Çode->
À·
;

239 i‡((
node
 =node->
∑ª¡
->
À·
Ë&& (node->∑ª¡ =
g
->
right
))

241 
À·
=0;

242 
tmp
 = 
node
->
∑ª¡
->parent;

243 if(
tmp
 &&Åmp->
À·
 =
node
->
∑ª¡
)

245 
À·
 =1;

248 
node
 = 
	`right_rŸ©i⁄
“ode->
∑ª¡
);

249 if(
tmp
)

251 if(!
À·
)

252 
tmp
->
right
 = 
node
;

254 
tmp
->
À·
 = 
node
;

256 
node
->
∑ª¡
 = 
tmp
;

257 
node
 =Çode->
right
;

260 
g
 = 
	`gë_gønd∑ª¡
(
node
);

261 
node
->
∑ª¡
->
cﬁ‹
 = 
BLACK
;

262 
g
->
cﬁ‹
 = 
RED
;

263 
À·
=0;

264 i‡(
node
 =node->
∑ª¡
->
À·
)

266 
tmp
 = 
g
->
∑ª¡
;

267 if(
tmp
 &&Åmp->
À·
 =
g
)

268 
À·
=1;

270 
g
 = 
	`right_rŸ©i⁄
(g);

272 i‡(
tmp
)

274 if(
À·
)

275 
tmp
->
À·
 = 
g
;

277 
tmp
->
right
 = 
g
;

281 
roŸ
 = 
g
;

283 
g
->
∑ª¡
 = 
tmp
;

287 
tmp
 = 
g
->
∑ª¡
;

288 if(
tmp
 &&Åmp->
À·
 =
g
)

289 
À·
=1;

290 
g
 = 
	`À·_rŸ©i⁄
(g);

292 i‡(
tmp
)

294 if(
À·
)

295 
tmp
->
À·
 = 
g
;

297 
tmp
->
right
 = 
g
;

301 
roŸ
 = 
g
;

303 
g
->
∑ª¡
 = 
tmp
;

305  
roŸ
;

309 
	}
}

313 
rbåì_node_t
 *
	$ö£π
(
rbåì_node_t
 *
roŸ
,
key
, 
pba
)

315 
rbåì_node_t
 *
node
;

318 
node
 = 
	`¸óã_node
(
key
,
pba
);

321 if(
roŸ
 =
NULL
)

324 
node
->
cﬁ‹
 = 
BLACK
;

325  
node
;

329 
node
->
cﬁ‹
 = 
RED
;

331 
roŸ
 = 
	`ö£π_öto_åì
‘oŸ,
node
);

333 
roŸ
 = 
	`adju°_rbåì
‘oŸ, 
node
);

335  
roŸ
;

336 
	}
}

339 
rbåì_node_t
 *
	$dñëe
()

342  
NULL
;

343 
	}
}

347 
	$wrôe_åì_to_disk
()

350 
	}
}

352 
	$maö
(
¨gc
, *
¨gv
[])

354 
rbåì_node_t
 *
roŸ
=
NULL
;

356 
roŸ
 = 
	`ö£π
(root,7,8);

357 
roŸ
 = 
	`ö£π
(root,9,8);

358 
roŸ
 = 
	`ö£π
(root,5,8);

359 
roŸ
 = 
	`ö£π
(root,4,8);

360 
roŸ
 = 
	`ö£π
(root,2,8);

363 
	`¥öt_ö‹dî
(
roŸ
);

364 if(
	`£¨ch_rbåì
(
roŸ
,9))

366 
	`¥ötf
("Found");

369 
	`¥ötf
("Not found.\n");

371 
	}
}

	@rubix_dir_ops.c

1 
	~"rubix_fûe_sy°em.h
"

4 
fûe_›î©i⁄s
 
	grubix_dú_f›s
 =

6 .
ªad
 = 
gíîic_ªad_dú
,

7 .
	gªaddú
 = 
rubix_ªad_dú
,

9 .
	gŒ£ek
 = 
gíîic_fûe_Œ£ek
,

14 
öode_›î©i⁄s
 
	grubix_dú_i›s
 =

17 .
gë©å
 = 
rubix_gë©å
,

18 .
	g¸óã
 = 
rubix_¸óã_öode
,

19 .
	gmkdú
 = 
rubix_mkdú_öode
,

20 .
	grmdú
 = 
rubix_rmdú_öode
,

21 .
	glookup
 = 
rubix_lookup
,

22 .
	gu∆ök
 = 
rubix_u∆ök
,

25 
buf„r_hód
 *
ªad_ibm≠
(
su≥r_block
 *
sb
);

26 
öode
 *
rubix_igë
(
su≥r_block
 *
sb
, 
öo
 ,
mode
);

27 
öô_öode_löks
(
öode
 *
dú
, öodê*öode, 
mode
);

28 
Æloc_disk_wrôe
(
öode
 *öode, 
blk˙t
, 
uöt64_t
 *
pba
, 
Æloc
);

29 
öode_díåy_to_dú
–
öode
 *
dú
, 
díåy
 *dentry, inode *inode);

30 
buf„r_hód
 *
ªad_bbm≠
(
su≥r_block
 *
sb
);

31 
ª˛aim_d©a_blocks
(
öode
 *öode, 
blk
);

32 
rubix_öode_t
 *
gë_rubix_öode_‰om_vfs
(
öode
 *öode, 
buf„r_hód
 **
bh
);

33 
Æloc_dblock_‰om_bôm≠
(
su≥r_block
 *
sb
);

34 
Æloc_öode_‰om_bôm≠
(
su≥r_block
 *
sb
);

35 
˛ór_dblock_bôm≠
(
su≥r_block
 *
sb
, 
block
);

36 
˛ór_öode_bôm≠
(
su≥r_block
 *
sb
, 
block
);

37 
˛ór_ödúe˘_blocks
(
su≥r_block
 *
sb
, 
block
);

41 
	$rubix_ªad_dú
(
fûe
 *fûe, *
dúít
, 
fûldú_t
 
fûldú
)

43 
díåy
 *
de
;

44 
öode
 *inode;

45 
su≥r_block
 *
sb
;

46 
off£t
;

47 
rubix_ömem_t
 *
øw_öode
;

48 
rubix_dú_íåy_t
 *
dú_íåy
;

49 
buf„r_hód
 *
bh
;

50 
uöt64_t
 
blk
;

53 
de
 = 
fûe
->
f_díåy
;

54 
öode
 = 
de
->
d_öode
;

55 
øw_öode
 = 
	`rubix_¸óã_ömem
(
öode
);

57 
sb
 = 
öode
->
i_sb
;

60 
blk
 = 
øw_öode
->
dblocks
[0];

65 if(
fûe
->
f_pos
 >= 2)

68 if(
	`fûldú
(
dúít
, ".",1 , 
fûe
->
f_pos
++, 
öode
->
i_öo
, 
DT_DIR
))

70 
	`¥ötk
("1..\n");

74 if(
	`fûldú
(
dúít
, "..",2 , 
fûe
->
f_pos
++, 
de
->
d_∑ª¡
->
d_öode
->
i_öo
, 
DT_DIR
))

76 
	`¥ötk
("2..\n");

80 
off£t
 = 0;

81 
bh
 = 
	`sb_bªad
(
sb
,
blk
);

83 
off£t
 < 
öode
->
i_size
)

85 
dú_íåy
 = (
rubix_dú_íåy_t
 *)(
bh
->
b_d©a
 + 
off£t
);

86 if(
dú_íåy
)

88 if(
	`fûldú
(
dúít
,
dú_íåy
->
«me
,dú_íåy->
«me_Àn
,
fûe
->
f_pos
++, dú_íåy->
öode
,dú_íåy->
fûe_ty≥
))

94 
off£t
+= 64;

96 
	`bªl£
(
bh
);

99 
	}
}

104 
	$rubix_¸óã_öode
(
öode
 *
dú
,
díåy
 *díåy, 
mode
, 
boﬁ
 )

106 
öode
 *inode;

107 
uöt64_t
 
pba
;

108 
su≥r_block
 *
sb
 = 
dú
->
i_sb
;

109 
˙t
 =-1;

111 
˙t
 = 
	`Æloc_öode_‰om_bôm≠
(
sb
);

113 if(
˙t
 == -1)

117  -
ENOMEM
;

124 
öode
 = 
	`rubix_igë
(
sb
, 
˙t
 ,
mode
);

125 
	`öô_öode_löks
(
dú
, 
öode
, 
mode
);

128 if(
	`S_ISDIR
(
mode
))

130 
	`Æloc_disk_wrôe
(
öode
,0, &
pba
 ,1);

134 
	`öode_díåy_to_dú
(
dú
, 
díåy
, 
öode
);

138 
	`d_ö°™tüã
(
díåy
, 
öode
);

139 
	`m¨k_öode_dúty
(
öode
);

141 
	`m¨k_öode_dúty
(
dú
);

144 
	}
}

148 
	$rubix_mkdú_öode
(
öode
 *öode, 
díåy
 *díåy, 
mode
)

150  
	`rubix_¸óã_öode
(
öode
, 
díåy
, 
mode
 | 
S_IFDIR
, 0);

151 
	}
}

154 
	$ª£t_öode
(
öode
 *inode)

156 
buf„r_hód
 *
bh
;

157 
j
;

158 
rubix_öode_t
 *
rö
 = 
	`gë_rubix_öode_‰om_vfs
(
öode
, &
bh
);

161 
rö
->
i_mode
 = 0777;

162 
rö
->
i_uid
 = 2;

163 
rö
->
i_gid
 = 0;

164 
rö
->
i_size
 = 0;

166 
rö
->
i_∆öks
 = 1;

167 
rö
->
i_blocks
 = 0;

169 
j
=0;j<
öode
->
i_blocks
;j++)

171 
buf„r_hód
 *
bh1
;

172 
uöt64_t
 
d©a_blk
 = 
rö
->
dblocks
[
j
];

174 i‡(
d©a_blk
 != 0)

176 
bh1
 = 
	`sb_bªad
(
öode
->
i_sb
, 
d©a_blk
);

177 
	`mem£t
(
bh1
->
b_d©a
, 0, bh1->
b_size
);

178 
rö
->
dblocks
[
j
] = 0;

179 
	`m¨k_buf„r_dúty
(
bh1
);

180 
	`bªl£
(
bh1
);

183 
	`m¨k_buf„r_dúty
(
bh
);

184 
	`bªl£
(
bh
);

185 
	}
}

189 
	$ªmove_íåy_‰om_dúe˘‹y
(
öode
 *
dú
, 
díåy
 *dentry)

191 
buf„r_hód
 *
bh
;

192 
rubix_dú_íåy_t
 *
dú_íåy
, *
dú_íåy1
;

193 
rubix_ömem_t
 *
ö
 = 
	`rubix_¸óã_ömem
(
dú
);

194 
off£t
,
˙t
=-1;

195 
su≥r_block
 *
sb
 = 
dú
->
i_sb
;

197 
uöt64_t
 
d©a_blk
 = 
ö
->
dblocks
[0];

199 
	`BUG_ON
(
d©a_blk
 == 0);

201 
bh
 = 
	`sb_bªad
(
sb
, 
d©a_blk
);

202 
off£t
 = 0;

203 
	`dump_Æl_íåy
(
dú
);

204 
off£t
 < 
dú
->
i_size
)

207 
dú_íåy
 = (
rubix_dú_íåy_t
 *)(
bh
->
b_d©a
 + 
off£t
);

208 if(
dú_íåy
)

211 if(!(
	`memcmp
(
díåy
->
d_«me
.
«me
, 
dú_íåy
->«me, 
	`°æí
(dentry->d_name.name))))

213 
˙t
 = 
off£t
;

217 
off£t
+=64;

220 if(
˙t
 != -1)

222 
off£t
 = 
˙t
;

223 
off£t
 < 
dú
->
i_size
)

225 
dú_íåy
 = (
rubix_dú_íåy_t
 *)(
bh
->
b_d©a
 + 
off£t
);

226 
dú_íåy1
 = (
rubix_dú_íåy_t
 *)(
bh
->
b_d©a
 + 
off£t
 + 64);

228 
	`mem˝y
(
dú_íåy
->
«me
, 
dú_íåy1
->«me,dú_íåy1->
«me_Àn
);

229 
dú_íåy
->
öode
 = 
dú_íåy1
->inode;

230 
dú_íåy
->
ªc_Àn
 = 
dú_íåy1
->rec_len;

231 
dú_íåy
->
«me_Àn
 = 
dú_íåy1
->name_len;

232 
dú_íåy
->
fûe_ty≥
 = 
dú_íåy1
->file_type;

234 
off£t
+=64;

237 
dú
->
i_size
 -= 64;

238 
	`m¨k_buf„r_dúty
(
bh
);

239 
	`m¨k_öode_dúty
(
dú
);

240 
	`bªl£
(
bh
);

243 
	}
}

252 
	$rubix_rmdú_öode
(
öode
 *
dú
, 
díåy
 *dentry)

254 #i‡
TEST


255 
buf„r_hód
 *
bh2
;

256 
rubix_öode_t
 *
öo
;

258 
su≥r_block
 *
sb
 = 
dú
->
i_sb
;

259 
öode
* inodê
díåy
->
d_öode
;

260 
i
,
io
;

262 
rubix_ömem_t
 *
ö
 = 
	`rubix_¸óã_ömem
(
öode
);

264 
	`¥ötk
("WHY isÅhis being called ..\n");

266 
	`˛ór_öode_bôm≠
(
sb
, 
öode
->
i_öo
);

267 
i
=0;i<
öode
->
i_blocks
;i++)

269 
	`˛ór_dblock_bôm≠
(
sb
, 
ö
->
dblocks
[
i
]);

270 
	`¥ötk
("clearingÅhe blocks ..\n");

271 
	`ª˛aim_d©a_blocks
(
öode
, 
ö
->
dblocks
[
i
]);

272 
ö
->
dblocks
[
i
] = 0;

274 
	`ªmove_íåy_‰om_dúe˘‹y
(
dú
, 
díåy
);

278 
	`öode_dec_lök_cou¡
(
dú
);

280 
	`öode_dec_lök_cou¡
(
öode
);

282 if(
	`S_ISDIR
(
öode
->
i_mode
))

284 
	`öode_dec_lök_cou¡
(
öode
);

288 
	`ª£t_öode
(
öode
);

290 
io
 = 
öode
->
i_öo
;

291 #i‡
TEST


293 
öo
 = 
	`gë_rubix_öode_‰om_vfs
(
öode
, &
bh2
);

294 if(
öo
->
i_blocks
 != 0)

296 
	`¥ötk
("Reset failed ..Check code\n");

297 
	`kas£π
(0);

301 
	`¥ötk
("iblock†:%d \n",
öo
->
i_blocks
);

304 
	`bªl£
(
bh2
);

305 
	`ªmove_hash
(
io
);

307 
	`ùut
(
öode
);

310 
	}
}

317 
díåy
 *
	$rubix_lookup
(
öode
 *
dú
, 
díåy
 *díåy, 
«meid©a
 *
nd
)

319 
buf„r_hód
 *
bh
;

320 
rubix_dú_íåy_t
 *
dú_íåy
 = 
NULL
;

321 
off£t
,
öo
;

322 
su≥r_block
 *
sb
 = 
dú
->
i_sb
;

324 
öode
 *öodê
NULL
;

326 
rubix_ömem_t
 *
ö
 = 
	`rubix_¸óã_ömem
(
dú
);

327 
uöt64_t
 
d©a_blk
 = 
ö
->
dblocks
[0];

330 
bh
 = 
	`sb_bªad
(
sb
, 
d©a_blk
);

332 
off£t
 = 0;

334 
off£t
 < 
dú
->
i_size
)

337 
dú_íåy
 = (
rubix_dú_íåy_t
 *)(
bh
->
b_d©a
 + 
off£t
);

338 if(
dú_íåy
)

340 if(!(
	`memcmp
(
díåy
->
d_«me
.
«me
, 
dú_íåy
->«me, 
	`°æí
(dentry->d_name.name))))

343 
öo
 = 
dú_íåy
->
öode
;

345 i‡(
dú_íåy
->
fûe_ty≥
 == 1)

347 
öode
 = 
	`rubix_igë
(
sb
, 
öo
, 
S_IFREG
);

351 
öode
 = 
	`rubix_igë
(
sb
, 
öo
, 
S_IFDIR
);

353 
	`d_add
(
díåy
, 
öode
);

354 
	`m¨k_buf„r_dúty
(
bh
);

355 
	`bªl£
(
bh
);

356  
NULL
;

359 
off£t
+=64;

363 
	`d_add
(
díåy
, 
NULL
);

364 
	`bªl£
(
bh
);

366  
NULL
;

367 
	}
}

371 
	$rubix_u∆ök
(
öode
 *
dú
, 
díåy
 *dentry)

373  
	`rubix_rmdú_öode
(
dú
, 
díåy
);

374 
	}
}

	@rubix_file_ops.c

1 
	~"rubix_fûe_sy°em.h
"

4 
fûe_›î©i⁄s
 
	grubix_fûe_f›s
 =

6 .
ªad
 = 
do_sync_ªad
 ,

10 .
	gwrôe
 = 
do_sync_wrôe
,

11 .
	gaio_ªad
 = 
gíîic_fûe_aio_ªad
,

12 .
	gaio_wrôe
 = 
gíîic_fûe_aio_wrôe
,

13 .
	gfsync
 = 
gíîic_fûe_fsync
,

17 
öode_›î©i⁄s
 
	grubix_fûe_i›s
 =

19 .
gë©å
 = 
rubix_gë©å
,

20 .
	g£èâr
 = 
rubix_£èâr
,

29 
	$rubix_gë©å
(
vfsmou¡
 *
m¡
, 
díåy
 *díåy, 
k°©
 *
°©
)

31 
	`gíîic_fûœâr
(
díåy
->
d_öode
, 
°©
);

34 
	}
}

36 
	$rubix_£èâr
(
díåy
 *díåy, 
üâr
 *
©å
)

38 
ªt
=0;

39 
öode
 *öodê
díåy
->
d_öode
;

41 
	`£èâr_c›y
(
öode
 ,
©å
);

44 
	`rubix_sb_wrôe_öode
(
öode
 , 
NULL
);

45 
	`m¨k_öode_dúty
(
öode
);

47  
ªt
;

48 
	}
}

	@rubix_file_ops.h

	@rubix_file_system.c

1 
	~"rubix_fûe_sy°em.h
"

23 
	gbåì_node_t
;

24 
öode
 *
rubix_igë
(
su≥r_block
 *
sb
, 
öo
 , 
mode
);

25 
rubix_gëblock
(
öode
 *öode, 
£˘‹_t
 
block
, 
buf„r_hód
 *
out
, 
¸óã
);

26 
rubix_gëblock_ªad
(
öode
 *öode, 
£˘‹_t
 
block
, 
buf„r_hód
 *
out
, 
¸óã
);

27 
dump_Æl_íåy
(
öode
 *
dú
);

28 
ª£t_öode
(
öode
 *inode);

29 
ªad_∑ge_‰om_disk
(
fûe
 *fûe, 
∑ge
 *page);

32 
fûe_›î©i⁄s
 
rubix_fûe_f›s
;

33 
öode_›î©i⁄s
 
rubix_fûe_i›s
;

34 
fûe_›î©i⁄s
 
rubix_dú_f›s
;

35 
öode_›î©i⁄s
 
rubix_dú_i›s
;

37 *
öô_w‹kî_thªads
();

38 
de°roy_w‹kî_thªads
(*
rbx
);

39 
Æloc_dblock_‰om_bôm≠
(
su≥r_block
 *
sb
) ;

40 
båì_node_t
 *
ö£π_båì_node
(båì_node_à*
roŸ
,
loff_t
 
pos
, 
uöt64_t
 
pba
);

41 
båì_node_t
 *
£¨ch_wrôe_modifiˇti⁄
(båì_node_à*
roŸ
,
loff_t
 
pos
, 
uöt64_t
 
pba
);

42 
¥öt_båì
(
båì_node_t
 *
roŸ
);

43 
båì_node_t
 *
£¨ch_node
(båì_node_à*
roŸ
, 
loff_t
 
pos
 , 
uöt64_t
 *);

44 
commô_∑ge
(
∑ge
 *∑ge, 
wrôeback_c⁄åﬁ
 *
wbc
);

49 
fûe_sy°em_ty≥
 
	grubix_fs_ty≥
 =

51 .
«me
 = "rubix",

52 .
	gmou¡
 = 
rubix_mou¡
,

53 .
	gkûl_sb
 = 
rubix_kûl_su≥r
,

54 .
	gfs_Êags
 = 
FS_REQUIRES_DEV
,

55 .
	gow√r
 = 
THIS_MODULE
,

66 
su≥r_›î©i⁄s
 
	grubix_s›
 =

68 .
Æloc_öode
 = 
rubix_sb_Æloc_öode
,

69 .
	gwrôe_öode
 = 
rubix_sb_wrôe_öode
,

70 .
	gde°roy_öode
 = 
rubix_sb_de°roy_öode
,

71 .
	gevi˘_öode
 = 
rubix_sb_evi˘_öode
,

72 .
	gput_su≥r
 = 
rubix_put_su≥r
,

81 
addªss_•a˚_›î©i⁄s
 
	grubix_as›s
 =

83 .
ªad∑ge
 = 
rubix_ªad_as›_∑ge
,

84 .
	gwrôïage
 = 
rubix_wrôe_as›_∑ge
,

85 .
	gwrôe_begö
 = 
rubix_¥ï¨e_wrôe_as›_∑ge
,

86 .
	gwrôe_íd
 = 
gíîic_wrôe_íd
,

92 
rubix_ömem_t
 *
	$rubix_¸óã_ömem
(
öode
 *inode)

94  
	`c⁄èöî_of
(
öode
, 
rubix_ömem_t
 ,
vfs_öode
);

95 
	}
}

98 *
	$gë_block_d©a_‰om_bh
(
blk
)

100  
NULL
;

101 
	}
}

104 
	$gë_buf„r_hód_idx
(
öo
, 
uöt64_t
 *
mod
)

106 
ba£
;

108 *
mod
 = 
öo
 % (
NUM_INODES_PER_BLK
);

109 
ba£
 = 
öo
 /(
NUM_INODES_PER_BLK
);

110  
ba£
;

111 
	}
}

130 
rubix_öode_t
 *
	$gë_rubix_öode_‰om_vfs
(
öode
 *öode, 
buf„r_hód
 **
bh
)

132 
rubix_öode_t
 *
rubix_öode
;

133 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

134 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

135 
öode_íåy
 *
i_í
;

138 
i_í
 = 
sbi
->
i_èbÀ
->
i_ít
[
öode
->
i_öo
];

139 *
bh
 = 
	`sb_bªad
(
sb
, 
i_í
->
blk
);

141 
rubix_öode
 = (
rubix_öode_t
 *)((*
bh
)->
b_d©a
 + 
i_í
->
off£t
);

160   
rubix_öode
;

161 
	}
}

163 
	$öode_öô_fun˘i⁄
(*
rubix
)

165 
rubix_ömem_t
 *
rö
 = (rubix_ömem_à*)
rubix
;

167 if(
rö
)

169 
	`öode_öô_⁄˚
(&
rö
->
vfs_öode
);

172 
rö
->
båì_roŸ
 = 
NULL
;

174 
	}
}

177 
kmem_ˇche
 *
	göode_ˇche

NULL
;

179 
	$¸óã_¶ab_ˇche
()

182 
öode_ˇche
 = (
kmem_ˇche
 *)
	`kmem_ˇche_¸óã
("RUBIX_INODE_CACHE",(
rubix_ömem_t
 ),0,

183 
SLAB_HWCACHE_ALIGN
 ,
öode_öô_fun˘i⁄
);

185 if(
öode_ˇche
 =
NULL
 )  -
ENOMEM
;

188 
	}
}

190 
	$de°roy_¶ab_ˇche
()

192 
	`kmem_ˇche_de°roy
(
öode_ˇche
);

193 
	}
}

195 
rubix_ömem_t
 *
	$Æloˇã_‰om_¶ab
()

197 
rubix_ömem_t
 *
±r
 = 
NULL
;

199 
±r
 = 
	`kmem_ˇche_Æloc
(
öode_ˇche
,
GFP_KERNEL
);

201  
±r
;

202 
	}
}

204 
	$‰ì_to_¶ab
(
rubix_ömem_t
 *
ö
)

206 
	`mem£t
(
ö
, 0, (*in));

208 
	`öode_öô_⁄˚
(&
ö
->
vfs_öode
);

209 
	`kmem_ˇche_‰ì
(
öode_ˇche
, 
ö
);

210 
	}
}

213 
öode
 *
	$rubix_sb_Æloc_öode
(
su≥r_block
 *
sb
)

216 
rubix_ömem_t
 *
öode_öfo
;

217 
öode_öfo
 = 
	`Æloˇã_‰om_¶ab
();

219  &
öode_öfo
->
vfs_öode
;

220 
	}
}

222 
	$rubix_de°roy_öode
(
öode
 *inode)

225 
rubix_ömem_t
 *
øw_öode
 = 
	`rubix_¸óã_ömem
(
öode
);

226 
	`‰ì_to_¶ab
(
øw_öode
);

227 
	}
}

229 
öode
* 
	$lök_to_⁄disk
(
öode
 *inode)

231  
	`rubix_sb_ªad_öode
(
öode
);

232 
	}
}

234 
	$rubix_sb_evi˘_öode
(
öode
 *inode)

239 i‡(
öode
->
i_d©a
.
ƒ∑ges
)

241 
	`åunˇã_öode_∑ges
(&
öode
->
i_d©a
, 0);

243 
	`övÆid©e_öode_buf„rs
(
öode
);

244 
	`˛ór_öode
(
öode
);

245 
	}
}

249 
öode
 *
	$rubix_igë
(
su≥r_block
 *
sb
, 
öo
 ,
mode
)

252 
öode
 *inode;

256 if((
ªt
 = 
	`£¨ch_hash
(
öo
)))

258 
	`¥ötk
("DUMPING ..\n");

259 
	`dump_hash
();

260 
	`kas£π
(0);

262 
	`buûd_hash
(
öo
);

264 
öode
 = 
	`igë_locked
(
sb
, 
öo
);

266 if(
öode
 =
NULL
)

268  
NULL
;

271 if(
	`S_ISREG
(
mode
))

273 
öode
->
i_›
 = &
rubix_fûe_i›s
;

274 
öode
->
i_f›
 = &
rubix_fûe_f›s
;

276 if(
	`S_ISDIR
(
mode
))

278 
öode
->
i_›
 = &
rubix_dú_i›s
;

279 
öode
->
i_f›
 = &
rubix_dú_f›s
;

281 
öode
->
i_m≠pög
->
a_›s
 = &
rubix_as›s
;

282 
öode
->
i_sb
 = 
sb
;

283 
öode
->
i_öo
 = 
öo
;

286 
öode
 = 
	`lök_to_⁄disk
(inode);

289 
öode
->
i_mode
 = inode->i_modê| 
mode
;

291 
	`u∆ock_√w_öode
(
öode
);

293  
öode
;

294 
	}
}

297 
	$rubix_fûl_su≥r
(
su≥r_block
 *
sb
, *
d©a
 , 
sûít
)

299 
öode
 *
roŸ
 = 
NULL
;

300 
rubix_sb_öfo_t
 *
sbi
;

301 
su≥r_block_t
 *
sbd

NULL
;

302 
buf„r_hód
 *
bh
;

303 
uöt64_t
 
off£t
,
ba£
;

304 
öode_èbÀ
 *
i_èbÀ
 = 
NULL
;

305 
i
;

307 
sbi
 = 
	`kzÆloc
((*sbi), 
GFP_KERNEL
);

308 
sb
->
s_fs_öfo
 = 
sbi
;

309 
sb
->
s_magic
 = 
MAGIC
;

312 
sbi
->
sb
 = 
	`sb_bªad
(sb,0);

314 
sbd
 = (
su≥r_block_t
 *)(
sbi
->
sb
->
b_d©a
);

315 
	`BUG_ON
(
sbd
 =
NULL
);

317 
i
=0;

318 
ba£
=1;

319 
bh
 = 
	`sb_bªad
(
sb
, 
ba£
);

320 
off£t
 = 0;

321 
i_èbÀ
 = 
sbi
->i_table;

323 if(!
i_èbÀ
)

326 
i_èbÀ
 = 
	`kmÆloc
((
öode_èbÀ
), 
GFP_KERNEL
);

332 
öode_íåy
 *
i_í
;

334 
i_èbÀ
->
i_ít
[
i
] = 
	`kmÆloc
((
öode_íåy
Ë,
GFP_KERNEL
);

335 
i_í
 = (
öode_íåy
 *)(
bh
->
b_d©a
 + 
off£t
);

337 
i_èbÀ
->
i_ít
[
i
]->
blk
 = 
i_í
->blk;

338 
i_èbÀ
->
i_ít
[
i
]->
off£t
 = 
i_í
->offset;

339 
off£t
+(
öode_íåy
);

340 
i
++;

342 if((
i
 % (
SIZE_ONE_BLOCK
 /((
öode_íåy
)))) == 0)

344 
bh
 = 
	`sb_bªad
(
sb
, 
ba£
++);

346 if(
i
 > 
NUM_INODES_FS
) ;

384 
	`mem˝y
(
sbi
->
≠≥nd_poöt
, 
sbd
->≠≥nd_poöà, (
EB
));

387 
sb
->
s_›
 = &
rubix_s›
;

388 
sb
->
s_ty≥
 = &
rubix_fs_ty≥
;

389 
	`sb_£t_blocksize
(
sb
, 
SIZE_ONE_BLOCK
);

391 
roŸ
 = 
	`rubix_igë
(
sb
, 
ROOT
 ,
S_IFDIR
);

393 
	`BUG_ON
(
roŸ
 =
NULL
);

395 
sb
->
s_roŸ
 = 
	`d_make_roŸ
(
roŸ
);

396 
	`BUG_ON
(
sb
->
s_roŸ
 =
NULL
);

397 
roŸ
->
i_blkbôs
 = 10;

398 
roŸ
->
i_byãs
 = 1024;

401 
	`BUG_ON
(
sb
->
s_roŸ
 =
NULL
);

402 
	`BUG_ON
(
sb
->
s_roŸ
->
d_öode
 =
NULL
);

403 
	`BUG_ON
(!
	`S_ISDIR
(
roŸ
->
i_mode
));

404 
	`BUG_ON
(
sb
->
s_roŸ
->
d_öode
 !
roŸ
);

406 
	`m¨k_buf„r_dúty
(
sbi
->
sb
);

409 
	}
}

412 
díåy
 *
	$rubix_mou¡
(
fûe_sy°em_ty≥
 *
fs_ty≥
, 
Êags
, c⁄° *
dev_«me
, *
d©a
)

414  
	`mou¡_bdev
(
fs_ty≥
, 
Êags
 , 
dev_«me
, 
d©a
, 
rubix_fûl_su≥r
);

415 
	}
}

424 
	$rubix_ªad_as›_∑ge
(
fûe
 *fûe, 
∑ge
 *page)

426 
cou¡
 =0;

427 
	`¥ötk
("RódögÖagê:%lu %d \n",
∑ge
->
ödex
,
cou¡
++);

429  
	`ªad_∑ge_‰om_disk
(
fûe
, 
∑ge
);

430 
	}
}

432 
	$rubix_wrôe_as›_∑ge
(
∑ge
 *∑ge, 
wrôeback_c⁄åﬁ
 *
wbc
)

435 
ªt
=0;

436 
cou¡
=0;

438 *
kaddr
 = 
	`km≠
(
∑ge
);

439 
öode
 *öodê
∑ge
->
m≠pög
->
ho°
;

440 
block
,
œ°_block
,
bbôs
;

441 
off£t
;

442 
t
 = 
öode
->
i_size
 >> 
PAGE_CACHE_SHIFT
;

445 
off£t
 = 
öode
->
i_size
 & (
PAGE_CACHE_SIZE
-1);

448 
	`¥ötk
("d©®beögÑód/wriôí ..i_size:%Œd :%†íd_ödex :%luÖage_ödex:%lu off£t:%d \n",
öode
->
i_size
,
kaddr
,
t
,
∑ge
->
ödex
,
off£t
);

449 
	`m¶ìp
(1000);

450 
	`kunm≠
(
∑ge
);

451 
bbôs
 = 
öode
->
i_blkbôs
;

452 
block
 = (
£˘‹_t
)
∑ge
->
ödex
 << (
PAGE_CACHE_SHIFT
 - 
bbôs
);

453 
œ°_block
 = (
öode
->
i_size
 - 1Ë>> 
bbôs
;

454 
	`¥ötk
("block :%dÜa°_block :%d",
block
,
œ°_block
);

457 
	`¥ötk
("WrôögÖagêcou¡ :%d \n",
cou¡
++);

458 
ªt
 = 
	`commô_∑ge
(
∑ge
, 
wbc
);

460  
ªt
;

461 
	}
}

463 
	$dump_öode
(
öode
 *inode)

465 
	`¥ötk
("öode->block†:%ld \n",
öode
->
i_blocks
);

466 
	}
}

468 
	#ödúe˘_blocks_deföed
 1

	)

478 
	$Æloc_disk_wrôe
(
öode
 *öode, 
uöt64_t
 
blk_num
, uöt64_à*
pba
, 
Æloc
)

480 
buf„r_hód
 *
bh_ödú
,*
bh_ö
,*
bo
;

481 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

482 
uöt16_t
 *
blk_id
,*
bö
,*
boö
;

483 
off£t
;

484 
uöt64_t
 
i
;

485 
idx
,
mod
,
div
;

487 
rubix_ömem_t
 *
ö_mem
 = 
	`rubix_¸óã_ömem
(
öode
);

488 
i
 = 
blk_num
;

496 i‡(
i
 < 
IDX_INDIRECT_BLK
)

499 i‡(
Æloc
 == 1)

502 i‡(!(
ö_mem
->
dblocks
[
i
] = 
	`Æloc_dblock_‰om_bôm≠
(
sb
)))

504  -
ENOMEM
;

506 *
pba
 = 
ö_mem
->
dblocks
[
i
];

508 
	`BUG_ON
(
ö_mem
->
dblocks
[
i
] == 0);

509 
öode
->
i_blocks
++;

513 *
pba
 = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

515 
	`BUG_ON
(
ö_mem
->
dblocks
[
i
] == 0);

516 
öode
->
i_blocks
++;

520 i‡(
i
 < 
IDX_INDIRECT_BLK2
)

523 if(!
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
])

525 
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
] = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

530 
bh_ödú
 = 
	`sb_bªad
(
sb
, 
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
]);

531 
blk_id
 = (
uöt16_t
 *)(
bh_ödú
->
b_d©a
 + (
i
 - 
IDX_INDIRECT_BLK
) * 2);

533 if(*
blk_id
 == 0)

536 *
blk_id
 = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

537 *
pba
 = *
blk_id
;

540 
	`m¨k_buf„r_dúty
(
bh_ödú
);

541 
	`m¨k_öode_dúty
(
öode
);

543 
	`bªl£
(
bh_ödú
);

544 
	`BUG_ON
(*
blk_id
 == 0);

546 if(
i
 < 
IDX_INDIRECT_BLK3
)

550 if(!
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
 + 1])

552 
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
 + 1] = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

558 
bh_ödú
 = 
	`sb_bªad
(
sb
, 
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
 + 1]);

559 
idx
 = 
i
 - 
IDX_INDIRECT_BLK2
;

560 
div
 = 
idx
 / 512;

561 
mod
 = 
idx
 % 512;

562 
blk_id
 = (
uöt16_t
 *)(
bh_ödú
->
b_d©a
 + 
div
 * 2);

564 i‡(*
blk_id
 == 0)

567 *
blk_id
 = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

569 
bh_ö
 = 
	`sb_bªad
(
sb
, *
blk_id
);

570 
off£t
 = 
mod
 * 2;

571 
bö
 = (
uöt16_t
 *)(
bh_ö
->
b_d©a
 + 
off£t
);

573 if(*
bö
 == 0)

576 *
bö
 = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

577 *
pba
 = *
bö
;

579 
	`m¨k_buf„r_dúty
(
bh_ödú
);

581 
	`bªl£
(
bh_ödú
);

583 
	`m¨k_buf„r_dúty
(
bh_ö
);

584 
	`m¨k_öode_dúty
(
öode
);

586 
	`bªl£
(
bh_ö
);

588 
	`BUG_ON
(*
bö
 == 0);

594 if(!
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
 + 2])

596 
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
 + 2] = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

599 
bh_ödú
 = 
	`sb_bªad
(
sb
, 
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
 + 2]);

600 
idx
 = 
i
 - 
IDX_INDIRECT_BLK3
;

601 
div
 = 
idx
 / (512 * 512);

602 
mod
 = 
idx
 % (512 * 512);

604 
blk_id
 = (
uöt16_t
 *)(
bh_ödú
->
b_d©a
 + 
div
 * 2 );

607 i‡(*
blk_id
 == 0)

610 *
blk_id
 = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

614 
bh_ö
 = 
	`sb_bªad
(
sb
, *
blk_id
);

615 
div
 = 
mod
 / 512;

616 
mod
 = mod % 512;

618 
bö
 = (
uöt16_t
 *)(
bh_ö
->
b_d©a
 + 
div
 * 2);

620 i‡(*
bö
 == 0)

623 *
bö
 = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

625 
bo
 = 
	`sb_bªad
(
sb
, *
bö
);

627 
boö
 = (
uöt16_t
 *)(
bo
->
b_d©a
 + 
mod
 * 2 );

629 if(*
boö
 == 0)

632 *
boö
 = 
	`Æloc_dblock_‰om_bôm≠
(
sb
);

633 *
pba
 = *
boö
;

636 
	`m¨k_buf„r_dúty
(
bh_ödú
);

637 
	`m¨k_buf„r_dúty
(
bh_ö
);

638 
	`m¨k_buf„r_dúty
(
bo
);

639 
	`m¨k_öode_dúty
(
öode
);

641 
	`bªl£
(
bh_ödú
);

642 
	`bªl£
(
bh_ö
);

643 
	`bªl£
(
bo
);

645 
	`BUG_ON
(*
boö
 == 0);

651 
	}
}

861 
	$rubix_¥ï¨e_wrôe_as›_∑ge
(
fûe
 *fûe,
addªss_•a˚
 *
m≠pög
, 
loff_t
 
pos
, 
Àn
, 
Êags
, 
∑ge
 **∑gê,**
fsd©a
)

868 
pgoff_t
 
ödex
;

941 
ödex
 = 
pos
 >> 
PAGE_CACHE_SHIFT
;

943 *
∑ge
 = 
	`gøb_ˇche_∑ge_wrôe_begö
(
m≠pög
, 
ödex
, 
Êags
);

946 
	}
}

949 
uöt64_t
 
	$gë_≠≥nd_poöt_buf„r
(
su≥r_block
 *
sb
, 
uöt64_t
 
ªq_blks
)

951 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

952 
öt64_t
 
blk_num
=-1;

956 
EB
 *
eb
 = 
sbi
->
≠≥nd_poöt
;

963 if(
ªq_blks
 < 
eb
->
‰ì_blks
)

965 
blk_num
 = (
eb
->
eb_num
 * 
NUM_BLKS_PER_EB
Ë+Éb->
cur_blk
;

966 
eb
->
cur_blk
 =Éb->cur_blk + 
ªq_blks
;

967 
eb
->
‰ì_blks
 =Éb->‰ì_blk†- 
ªq_blks
;

975 
eb
->
eb_num
++;

977 
eb
->
cur_blk
 = 0;

978 
eb
->
°¨t_blk
 = 0;

979 
eb
->
íd_blk
 = 
NUM_BLKS_PER_EB
;

980 
eb
->
‰ì_blks
 = 
NUM_BLKS_PER_EB
;

985 if(
eb
->
eb_num
 =eb->
LAST_EB
) ;

988  
blk_num
;

989 
	}
}

992 
öode
 *
	$rubix_sb_ªad_öode
(
öode
 *inode)

994 
rubix_öode_t
 *
öo
;

995 
buf„r_hód
 *
bh
;

996 
i
;

997 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

998 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

1001 
rubix_ömem_t
 *
øw_öode
 = 
	`rubix_¸óã_ömem
(
öode
);

1004 
öo
 = 
	`gë_rubix_öode_‰om_vfs
(
öode
, &
bh
);

1006 
öode
->
i_mode
 = 
öo
->i_mode;

1009 
öode
->
i_©ime
.
tv_£c
 = 
öo
->i_atime;

1010 
öode
->
i_˘ime
.
tv_£c
 = 
öo
->i_ctime;

1011 
öode
->
i_mtime
.
tv_£c
 = 
öo
->i_mtime;

1013 
öode
->
i_©ime
.
tv_n£c
 = 0;

1014 
öode
->
i_˘ime
.
tv_n£c
 = 0;

1015 
öode
->
i_mtime
.
tv_n£c
 = 0;

1016 
öode
->
i_©ime
öode->
i_mtime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

1018 
öode
->
i_blocks
 = 
öo
->i_blocks;

1019 
öode
->
i_uid
 = 
	`cuºít_fsuid
();

1020 
öode
->
i_gid
 = 
	`cuºít_fsgid
();

1022 
öode
->
i_size
 = 
öo
->i_size;

1026 
i
=0;i<=
IDX_INDIRECT_BLK
 + 3;i++)

1028 
øw_öode
->
dblocks
[
i
] = 
öo
->dblocks[i];

1029 
	`¥ötk
("øw_öode:%Œu\n",
øw_öode
->
dblocks
[
i
]);

1038 
	`¥ötk
("size:%Œu \n",
öode
->
i_size
);

1040 if(
öode
->
i_öo
 == 0 )

1044 
	`BUG_ON
(
øw_öode
->
dblocks
[0] !2 * 
sbi
->
m≠_¨øys
 + 3 );

1047 
	`bªl£
(
bh
);

1049 #i‡
TEST


1050 
	`vîify_m¨k_öode
(
öode
);

1052 
	`m¨k_öode_dúty
(
öode
);

1054  
öode
;

1055 
	}
}

1057 
	$rubix_sb_wrôe_öode
(
öode
 *öodê, 
wrôeback_c⁄åﬁ
 *
wbc
)

1059 
rubix_öode_t
 *
öo
 = 
NULL
;

1060 
rubix_ömem_t
 *
ö_mem
 = 
NULL
;

1061 
buf„r_hód
 *
bh
;

1062 
uöt16_t
 *
blk_id
;

1063 
buf„r_hód
 *
bh1
;

1064 
i
;

1065 
uöt64_t
 
blk_num
;

1066 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

1067 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

1068 
öode_èbÀ
 *
i_èbÀ
 = 
NULL
;

1070 
i_èbÀ
 = 
sbi
->i_table;

1072 
	`BUG_ON
(
i_èbÀ
 =
NULL
);

1075 
ö_mem
 = 
	`rubix_¸óã_ömem
(
öode
);

1080 
blk_num
 = 
	`gë_≠≥nd_poöt_buf„r
(
sb
, 1);

1081 
bh
 = 
	`sb_bªad
(
sb
, 
blk_num
);

1083 
öo
 = (
rubix_öode_t
 *)(
bh
->
b_d©a
);

1087 
öo
->
i_mode
 = 
öode
->i_mode;

1088 
öo
->
i_©ime
 = 
öode
->i_©ime.
tv_£c
;

1089 
öo
->
i_˘ime
 = 
öode
->i_˘ime.
tv_£c
;

1090 
öo
->
i_mtime
 = 
öode
->i_mtime.
tv_£c
;

1091 
öo
->
i_blocks
 = 
öode
->i_blocks;

1092 
öo
->
i_uid
 = 
öode
->i_uid;

1093 
öo
->
i_gid
 = 
öode
->i_gid;

1095 
öo
->
i_size
 = 
öode
->i_size;

1102 
i
=0;i<=
IDX_INDIRECT_BLK
 + 3;i++)

1104 
öo
->
dblocks
[
i
] = 
ö_mem
->dblocks[i];

1105 
	`¥ötk
("ö_mem:%Œu\n",
ö_mem
->
dblocks
[
i
]);

1108 if(
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
])

1110 
bh1
 = 
	`sb_bªad
(
öode
->
i_sb
, 
ö_mem
->
dblocks
[
IDX_INDIRECT_BLK
]);

1111 
i
=0;i<
öode
->
i_blocks
-
IDX_INDIRECT_BLK
;i++)

1113 
blk_id
 = (
uöt16_t
 *)(
bh1
->
b_d©a
 + 
i
 * 2);

1114 
	`¥ötk
("%d \n",*
blk_id
);

1116 
	`bªl£
(
bh1
);

1118 
	`¥ötk
("size:%Œu \n",
öode
->
i_size
);

1120 if(
öode
->
i_öo
 == 0 )

1128 
	`m¨k_buf„r_dúty
(
bh
);

1129 
	`bªl£
(
bh
);

1131 
i_èbÀ
->
i_ít
[
öode
->
i_öo
]->
blk
 = 
blk_num
;

1132 
i_èbÀ
->
i_ít
[
öode
->
i_öo
]->
off£t
 = 0;

1135 
	}
}

1138 
	$rubix_sb_de°roy_öode
(
öode
 *inode)

1140 
	`rubix_de°roy_öode
(
öode
);

1141 
	}
}

1143 
	$öô_öode_löks
(
öode
 *
dú
, öodê*öode, 
mode
)

1145 if(
	`S_ISDIR
(
mode
))

1147 
	`öc_∆ök
(
öode
);

1150 
	`öc_∆ök
(
dú
);

1151 
öode
->
i_©ime
öode->
i_mtime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

1152 
	}
}

1154 
	$öode_díåy_to_dú
–
öode
 *
dú
, 
díåy
 *dentry, inode *inode)

1156 
buf„r_hód
 *
bh
;

1157 #i‡
TEST


1158 
buf„r_hód
 *
bh1
;

1159 
rubix_dú_íåy_t
 *
dõ¡ry
;

1161 
rubix_dú_íåy_t
 *
dú_íåy
;

1162 
rubix_ömem_t
 *
ö
 = 
	`rubix_¸óã_ömem
(
dú
);

1163 
d©a_blk
;

1164 
su≥r_block
 *
sb
 = 
dú
->
i_sb
;

1166 
d©a_blk
 = 
ö
->
dblocks
[0];

1167 
	`BUG_ON
(
d©a_blk
 == 0);

1168 
bh
 = 
	`sb_bªad
(
sb
, 
d©a_blk
);

1171 
dú_íåy
 = (
rubix_dú_íåy_t
 *)(
bh
->
b_d©a
 + 
dú
->
i_size
);

1174 
dú_íåy
->
öode
 = inode->
i_öo
;

1175 
dú_íåy
->
ªc_Àn
 = 64;

1176 
dú_íåy
->
«me_Àn
 = 
díåy
->
d_«me
.
Àn
;

1178 if(
	`S_ISDIR
(
öode
->
i_mode
))

1180 
dú_íåy
->
fûe_ty≥
 = 2;

1184 
dú_íåy
->
fûe_ty≥
 = 1;

1186 
	`mem˝y
(
dú_íåy
->
«me
, 
díåy
->
d_«me
.«me, dú_íåy->
«me_Àn
 + 1);

1190 
dú
->
i_size
 +=64;

1191 
dú
->
i_mtime
 = 
CURRENT_TIME
;

1193 
	`m¨k_buf„r_dúty
(
bh
);

1194 
	`m¨k_öode_dúty
(
dú
);

1195 
	`bªl£
(
bh
);

1196 #i‡
TEST


1197 
bh1
 = 
	`sb_bªad
(
sb
, 
d©a_blk
);

1198 
dõ¡ry
 = (
rubix_dú_íåy_t
 *)(
bh1
->
b_d©a
 + (
dú
->
i_size
 - 64 ));

1199 if(
dú_íåy
->
öode
 =
dõ¡ry
->öodê&& dú_íåy->
ªc_Àn
 == dientry->rec_len &&

1200 !
	`memcmp
(
dú_íåy
->
«me
,
dõ¡ry
->«me, dú_íåy->
«me_Àn
))

1202 
	`¥ötk
("All fieldsÜook ok ..\n");

1203 
	`dump_Æl_íåy
(
dú
);

1207 
	`dump_díåy
(
dú_íåy
);

1208 
	`dump_díåy
(
dõ¡ry
);

1209 
	`kas£π
(0);

1211 
	`bªl£
(
bh1
);

1216 
	}
}

1221 
	$ª˛aim_d©a_blocks
(
öode
 *öode, 
uöt64_t
 
blk
)

1224 
buf„r_hód
 *
bh
;

1226 
bh
 = 
	`sb_bªad
(
öode
->
i_sb
, 
blk
);

1227 
	`bf‹gë
(
bh
);

1229 
	`m¨k_öode_dúty
(
öode
);

1230 
	}
}

1232 #i‡
DUMPCODE


1234 
	$rubix_wrôe_íd
(
fûe
 *fûe, 
addªss_•a˚
 *
m≠pög
,

1235 
loff_t
 
pos
, 
Àn
, 
c›õd
,

1236 
∑ge
 *∑ge, *
fsd©a
)

1238 
buf„r_hód
 *
bh
;

1239 
öode
 *öodê
m≠pög
->
ho°
;

1240 
rubix_ömem_t
 *
ö_mem
 = 
	`rubix_¸óã_ömem
(
öode
);

1241 
d©a_blk
;

1243 
ªt
 = 
	`gíîic_wrôe_íd
(
fûe
, 
m≠pög
, 
pos
, 
Àn
, 
c›õd
, 
∑ge
, 
fsd©a
);

1246 
d©a_blk
 = 
ö_mem
->
dblocks
[0];

1247 
bh
 = 
	`sb_bªad
(
öode
->
i_sb
, 
d©a_blk
);

1248 
	`¥ötk
("bh->b_d©®:%s",
bh
->
b_d©a
);

1249 
	`m¶ìp
(1000);

1250 
	`m¨k_buf„r_dúty
(
bh
);

1251 
	`bªl£
(
bh
);

1253  
ªt
;

1254 
	}
}

1257 
	$rubix_put_su≥r
(
su≥r_block
 *
sb
)

1259 
rubix_sb_öfo_t
 *
sbi
 = (rubix_sb_öfo_à*)
sb
->
s_fs_öfo
;

1260 
i
;

1261 
uöt64_t
 
ba£
,
off£t
;

1262 
su≥r_block_t
 *
sbd
;

1263 
buf„r_hód
 *
bh
;

1264 
öode_èbÀ
 *
i_èbÀ
;

1266 i‡(
sbi
)

1268 
sbd
 = (
su≥r_block_t
 *)(
sbi
->
sb
->
b_d©a
);

1270 
i
=0;

1271 
ba£
 =1;

1272 
bh
 = 
	`sb_bªad
(
sb
, 
ba£
);

1273 
off£t
 = 0;

1274 
i_èbÀ
 = 
sbi
->i_table;

1276 
i
< 
NUM_INODES_FS
)

1278 
öode_íåy
 *
i_í
;

1280 
i_í
 = (
öode_íåy
 *)(
bh
->
b_d©a
 + 
off£t
);

1282 
i_í
->
blk
 = 
i_èbÀ
->
i_ít
[
i
]->blk;

1283 
i_í
->
off£t
 = 
i_èbÀ
->
i_ít
[
i
]->offset;

1284 
off£t
+(
öode_íåy
);

1285 
i
++;

1286 
	`k‰ì
(
i_èbÀ
->
i_ít
[
i
]);

1288 if((
i
 % (
SIZE_ONE_BLOCK
 / (
öode_íåy
))) == 0)

1290 
bh
 = 
	`sb_bªad
(
sb
, 
ba£
++);

1292 if(
i
 > 
NUM_INODES_FS
) ;

1293 
	`m¨k_buf„r_dúty
(
bh
);

1297 
	`mem˝y
(
sbd
->
≠≥nd_poöt
, 
sbi
->≠≥nd_poöt, (
EB
));

1298 
	`m¨k_buf„r_dúty
(
sbi
->
sb
);

1299 
	`bªl£
(
sbi
->
sb
);

1309 
	`k‰ì
(
sbi
);

1311 
	}
}

1314 
	$rubix_kûl_su≥r
(
su≥r_block
 *
sb
)

1334 
	`kûl_block_su≥r
(
sb
);

1335 
	}
}

1354 
uöt64_t
 
	$gë_≠≥nd_poöt
(
su≥r_block
 *
sb
, 
uöt64_t
 
ƒ_∑ges
)

1356 
rubix_sb_öfo_t
 *
sbi
 = 
sb
->
s_fs_öfo
;

1357 
uöt64_t
 
ªq_blks
;

1358 
uöt64_t
 
blk_num
;

1362 
EB
 *
eb
 = 
sbi
->
≠≥nd_poöt
;

1365 
ªq_blks
 = 
ƒ_∑ges
 * 4;

1372 if(
ªq_blks
 < 
eb
->
‰ì_blks
)

1374 
blk_num
 = (
eb
->
eb_num
 * 
NUM_BLKS_PER_EB
Ë+Éb->
cur_blk
;

1375 
eb
->
cur_blk
 =Éb->cur_blk + 
ªq_blks
;

1376 
eb
->
‰ì_blks
 =Éb->‰ì_blk†- 
ªq_blks
;

1384 
eb
->
eb_num
++;

1386 
eb
->
cur_blk
 = 0;

1387 
eb
->
°¨t_blk
 = 0;

1388 
eb
->
íd_blk
 = 
NUM_BLKS_PER_EB
;

1389 
eb
->
‰ì_blks
 = 
NUM_BLKS_PER_EB
;

1394 if(
eb
->
eb_num
 =eb->
LAST_EB
) ;

1398  
blk_num
;

1399 
	}
}

1403 
	$commô_∑ges_com∂ëe
(
bio
 *bio, 
îr
)

1407 
öode
 *öodê(öodê*)
bio
->
bi_¥iv©e
;

1408 
rubix_ömem_t
 *
ö_mem
 = 
	`rubix_¸óã_ömem
(
öode
);

1409 
∑ge
 *page;

1410 
i
;

1411 
båì_node_t
 *
node
=
NULL
,*
roŸ_√w
;

1412 
uöt64_t
 
ƒ_∑ges
,
idx
;

1414 
ƒ_∑ges
 = 
öode
->
i_byãs
 >> 
PAGE_CACHE_SHIFT
;

1415 i‡(
öode
->
i_byãs
 % 
PAGE_CACHE_SHIFT
Ë
ƒ_∑ges
++;

1417 
i
=0;i<
ƒ_∑ges
;i++)

1419 
∑ge
 = 
bio
->
bi_io_vec
[
i
].
bv_∑ge
;

1420 
i
 = 
∑ge
->
ödex
;

1421 
i
 = i * 4;

1423 
node
 = 
	`£¨ch_node
(
ö_mem
->
båì_roŸ
, 
i
, &
idx
);

1425 if(
node
 =
NULL
)

1427 
ö_mem
->
båì_roŸ
 = 
	`ö£π_båì_node
(ö_mem->båì_roŸ, 
i
, 
bio
->
bi_£˘‹
);

1432 
roŸ_√w
 = 
	`£¨ch_wrôe_modifiˇti⁄
(
ö_mem
->
båì_roŸ
, 
i
,
bio
->
bi_£˘‹
);

1433 
	`¥öt_båì
(
roŸ_√w
);

1437 
	}
}

1440 
	$commô_∑ge_com∂ëe
(
bio
 *bio, 
îr
)

1445 
∑ge
 *page;

1446 
öode
 *öodê(öodê*)
bio
->
bi_¥iv©e
;

1447 
båì_node_t
 *
node
=
NULL
,*
roŸ_√w
;

1448 
i
=0;

1449 
uöt64_t
 
idx
;

1450 
rubix_ömem_t
 *
ö_mem
 = 
	`rubix_¸óã_ömem
(
öode
);

1452 
∑ge
 = 
bio
->
bi_io_vec
[
i
].
bv_∑ge
;

1453 
i
 = 
∑ge
->
ödex
;

1454 
i
 = i * 4 ;

1456 
node
 = 
	`£¨ch_node
(
ö_mem
->
båì_roŸ
,
i
, &
idx
);

1458 if(
node
 =
NULL
)

1460 
ö_mem
->
båì_roŸ
 = 
	`ö£π_båì_node
(ö_mem->båì_roŸ, 
i
, 
bio
->
bi_£˘‹
);

1464 
roŸ_√w
 = 
	`£¨ch_wrôe_modifiˇti⁄
(
ö_mem
->
båì_roŸ
, 
i
, 
bio
->
bi_£˘‹
);

1465 
	`¥öt_båì
(
roŸ_√w
);

1471 
	}
}

1474 
	$commô_∑ges_of_öode
(
öode
 *inode)

1476 
addªss_•a˚
 *
m≠pög
 = 
öode
->
i_m≠pög
;

1477 
uöt64_t
 
ödex
 = 0;

1478 
i
=0;

1479 
bio
 *bio;

1480 
uöt64_t
 
∑ges_ƒ
,
max_∑ges
;

1482 
∑ge
 *page;

1483 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

1485 
ªque°_queue
 *
q
 = 
	`bdev_gë_queue
(
sb
->
s_bdev
);

1487 
max_∑ges
 = 
	`queue_max_hw_£˘‹s
(
q
Ë>> (
PAGE_SHIFT
 - 10);

1490 
∑ges_ƒ
 = 
öode
->
i_byãs
 >> 
PAGE_CACHE_SHIFT
;

1491 i‡(
öode
->
i_byãs
 % 
PAGE_CACHE_SHIFT
Ë
∑ges_ƒ
++;

1493 
bio
 = 
	`bio_Æloc
(
GFP_NOFS
, 
∑ges_ƒ
);

1495 
i
=0;i<
∑ges_ƒ
;i++)

1498 if(
i
 >
max_∑ges
)

1501 
bio
->
bi_v˙t
 = 
∑ges_ƒ
;

1502 
bio
->
bi_idx
 = 0;

1503 
bio
->
bi_size
 = 
∑ges_ƒ
 * 
PAGE_SIZE
;

1504 
bio
->
bi_bdev
 = 
sb
->
s_bdev
;

1505 
bio
->
bi_£˘‹
 = 
	`gë_≠≥nd_poöt
(
sb
, 
∑ges_ƒ
);

1506 
bio
->
bi_¥iv©e
 = 
öode
;

1507 
bio
->
bi_íd_io
 = 
commô_∑ges_com∂ëe
;

1509 
	`submô_bio
(
WRITE
, 
bio
);

1510 
ödex
 +
i
;

1512 
i
=0;

1514 
bio
 = 
	`bio_Æloc
(
GFP_NOFS
, 
max_∑ges
);

1515 
	`BUG_ON
(!
bio
);

1519 
∑ge
 = 
	`föd_gë_∑ge
(
m≠pög
, 
i
);

1520 
bio
->
bi_io_vec
[
i
].
bv_∑ge
 = 
∑ge
;

1521 
bio
->
bi_io_vec
[
i
].
bv_Àn
 = 
PAGE_SIZE
;

1522 
bio
->
bi_io_vec
[
i
].
bv_off£t
 = 0;

1524 
	`u∆ock_∑ge
(
∑ge
);

1525 
	`∑ge_ˇche_ªÀa£
(
∑ge
);

1527 
bio
->
bi_v˙t
 = 
∑ges_ƒ
;

1528 
bio
->
bi_idx
 = 0;

1529 
bio
->
bi_size
 = 
∑ges_ƒ
 * 
PAGE_SIZE
;

1530 
bio
->
bi_bdev
 = 
sb
->
s_bdev
;

1532 
bio
->
bi_£˘‹
 = 
	`gë_≠≥nd_poöt
(
sb
, 
∑ges_ƒ
);

1533 
bio
->
bi_¥iv©e
 = 
öode
;

1534 
bio
->
bi_íd_io
 = 
commô_∑ges_com∂ëe
;

1535 
	`submô_bio
(
WRITE
, 
bio
);

1538 
	}
}

1541 
	$commô_∑ge
(
∑ge
 *∑ge, 
wrôeback_c⁄åﬁ
 *
wbc
)

1544 
bio
 *bio;

1545 
i
=0;

1546 
öode
 *öodê
∑ge
->
m≠pög
->
ho°
;

1547 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

1551 
bio
 = 
	`bio_Æloc
(
GFP_NOFS
, 1);

1553 
bio
->
bi_io_vec
[
i
].
bv_∑ge
 = 
∑ge
;

1554 
bio
->
bi_io_vec
[
i
].
bv_Àn
 = 
PAGE_SIZE
;

1555 
bio
->
bi_io_vec
[
i
].
bv_off£t
 = 0;

1556 
bio
->
bi_v˙t
 = 1;

1557 
bio
->
bi_idx
 = 0;

1558 
bio
->
bi_size
 = 
PAGE_SIZE
;

1559 
bio
->
bi_bdev
 = 
sb
->
s_bdev
;

1561 
bio
->
bi_£˘‹
 = 
	`gë_≠≥nd_poöt
(
sb
, 1);

1562 
bio
->
bi_¥iv©e
 = (*)
öode
;

1563 
bio
->
bi_íd_io
 = 
commô_∑ge_com∂ëe
;

1564 
	`submô_bio
(
WRITE
, 
bio
);

1566 
	}
}

1569 
uöt64_t
 
	$gë_physiˇl_addªss
(
rubix_ömem_t
 *
ö_mem
, 
uöt64_t
 
lba
)

1571 
båì_node_t
 *
node
;

1572 
uöt64_t
 
idx
;

1574 
node
 = 
	`£¨ch_node
(
ö_mem
->
båì_roŸ
, 
lba
,&
idx
);

1576 
	`BUG_ON
(
node
 =
NULL
);

1577  
node
->
pba
[
idx
];

1579 
	}
}

1582 
	$ªad_∑ge_‰om_disk
(
fûe
 *fûe, 
∑ge
 *page)

1585 
bio
 *bio;

1586 
öode
 *öodê
∑ge
->
m≠pög
->
ho°
;

1587 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

1589 
rubix_ömem_t
 *
ö_mem
 = 
	`rubix_¸óã_ömem
(
öode
);

1590 
uöt64_t
 
i
;

1593 
bio
 = 
	`bio_Æloc
(
GFP_NOFS
, 1);

1595 
bio
->
bi_io_vec
[0].
bv_∑ge
 = 
∑ge
;

1596 
bio
->
bi_io_vec
[0].
bv_Àn
 = 
PAGE_SIZE
;

1597 
bio
->
bi_io_vec
[0].
bv_off£t
 = 0;

1598 
bio
->
bi_v˙t
 = 1;

1599 
bio
->
bi_idx
 = 0;

1600 
bio
->
bi_size
 = 
PAGE_SIZE
;

1601 
bio
->
bi_bdev
 = 
sb
->
s_bdev
;

1603 
i
 = 4 * 
∑ge
->
ödex
;

1604 
bio
->
bi_£˘‹
 = 
	`gë_physiˇl_addªss
(
ö_mem
, 
i
);

1605 
bio
->
bi_¥iv©e
 = (*)
öode
;

1606 
bio
->
bi_íd_io
 = 
NULL
;

1607 
	`submô_bio
(
READ
, 
bio
);

1609 
	}
}

1611 *
	gglobÆ_w‹kî
 = 
NULL
;

1612 
__öô
 
	$öô_fûesy°em
()

1614 
ªt
=0;

1616 
	`¥ötk
("RUBIX FSÜoaded ..\n");

1622 
ªt
 = 
	`ªgi°î_fûesy°em
(&
rubix_fs_ty≥
);

1624 
ªt
 = 
	`¸óã_¶ab_ˇche
();

1626 
globÆ_w‹kî
 = 
	`öô_w‹kî_thªads
();

1628  
ªt
;

1629 
	}
}

1632 
__exô
 
	$exô_fûesy°em
()

1634 
	`¥ötk
("Removing RUBIX FS ..\n");

1635 
	`de°roy_w‹kî_thªads
(
globÆ_w‹kî
);

1636 
	`de°roy_¶ab_ˇche
();

1637 
	`uƒegi°î_fûesy°em
(&
rubix_fs_ty≥
);

1638 
	}
}

1641 
moduÀ_öô
 (
öô_fûesy°em
);

1642 
moduÀ_exô
 (
exô_fûesy°em
);

	@rubix_file_system.h

1 #i‡!
deföed
 
__FILESYSTEM__


2 
	#__FILESYSTEM__


	)

3 
	~"rubix_mkfs.h
"

4 
	~"rubix_ã°.h
"

5 
	~"båì.h
"

6 
	~<löux/kî√l.h
>

7 
	~<löux/buf„r_hód.h
>

8 
	~<löux/fs.h
>

9 
	~<löux/mou¡.h
>

10 
	~<löux/vfs.h
>

11 
	~<löux/blkdev.h
>

12 
	~<löux/dñay.h
>

13 
	~<löux/«mei.h
>

14 
	~<löux/idr.h
>

16 
	#MAGIC
 0xABC432

	)

17 
	#MAX_VERSIONS
 5

18 

	)

19 
	s__ödúe˘_blocks__


21 
uöt16_t
 
	mdblocks
[
NUM_BLKS_PER_INODE
];

22 
__ödúe˘_blocks__
 *
	mÀvñ2
;

24 }
	tödúe˘_blocks_t
;

27 #i‡
CHECKPOINT


28 
	s_˝_vîsi⁄__


30 
__båì_node_
 *
	mbåì_roŸ
[
MAX_VERSIONS
];

31 }
	tcheckpoöt_vîsi⁄_t
;

35 
	g__båì_node_
;

36 
	s__möix_öode


39 
uöt64_t
 
	mdblocks
[
NUM_BLKS_PER_INODE
];

42 
öode
 
	mvfs_öode
;

46 
__båì_node_
 *
	mbåì_roŸ
;

47 }
	trubix_ömem_t
;

49 
	st_rubix_su≥r_block_


52 }
	grubix_su≥r_block_t
;

64 
	s_rubix_öfo_sb


66 
buf„r_hód
 *
	msb
;

67 
buf„r_hód
 **
	mibm≠
;

68 
buf„r_hód
 **
	mbbm≠
;

69 
uöt64_t
 
	mm≠_¨øys
;

70 
uöt64_t
 
	mmëa_d©a_blks
;

71 
EB
 *
	m≠≥nd_poöt
;

72 
öode_èbÀ
 *
	mi_èbÀ
;

73 }
	trubix_sb_öfo_t
;

78 
díåy
 *
rubix_mou¡
(
fûe_sy°em_ty≥
 *
fs_ty≥
, 
Êags
, c⁄° *
dev_«me
, *
d©a
);

79 
rubix_fûl_su≥r
(
su≥r_block
 *
sb
, *
d©a
 , 
sûít
);

80 
rubix_kûl_su≥r
(
su≥r_block
 *
sb
);

81 
rubix_put_su≥r
(
su≥r_block
 *
sb
);

84 
rubix_sb_wrôe_öode
(
öode
 *öode, 
wrôeback_c⁄åﬁ
 *
wbc
);

85 
öode
 *
rubix_sb_Æloc_öode
(
su≥r_block
 *
sb
);

86 
rubix_sb_de°roy_öode
(
öode
 *inode);

87 
rubix_sb_lookup_öode
(
öode
 *inode);

88 
rubix_sb_evi˘_öode
(
öode
 *inode);

91 
rubix_gë©å
(
vfsmou¡
 *
m¡
, 
díåy
 *díåy, 
k°©
 *
°©
);

92 
rubix_£èâr
(
díåy
 *díåy, 
üâr
 *
©å
);

95 
rubix_fûe_›í
(
öode
 *öode, 
fûe
 *file);

96 
rubix_fûe_ªÀa£
(
öode
 *öode, 
fûe
 *file);

99 
rubix_¸óã_öode
(
öode
 *
dú
, 
díåy
 *díåy, 
mode
,
boﬁ
 );

100 
rubix_mkdú_öode
–
öode
 *
dú
, 
díåy
 *díåy, 
mode
);

102 
rubix_rmdú_öode
(
öode
 *öode, 
díåy
 *dentry);

103 
díåy
 *
rubix_lookup
(
öode
 *
dú
, díåy *díåy, 
«meid©a
 *
nd
);

104 
rubix_u∆ök
(
öode
 *öode, 
díåy
 *dentry);

107 
rubix_ªad_dú
(
fûe
 *fûe, *
dúít
, 
fûldú_t
 
fûldú
);

110 
rubix_ªad_as›_∑ge
–
fûe
 *fûe, 
∑ge
 *page);

111 
rubix_wrôe_as›_∑ge
–
∑ge
 *∑ge, 
wrôeback_c⁄åﬁ
 *
wbc
);

112 
rubix_¥ï¨e_wrôe_as›_∑ge
–
fûe
 *fûe,
addªss_•a˚
 *
m≠pög
, 
loff_t
 
pos
, 
Àn
, 
Êags
, 
∑ge
 **∑gê,**
fsd©a
);

113 
rubix_wrôe_íd
–
fûe
 *fûe,
addªss_•a˚
 *
m≠pög
, 
loff_t
 
pos
, 
Àn
, 
Êags
, 
∑ge
 *∑gê,*
fsd©a
);

116 
öode
 *
rubix_sb_ªad_öode
(inode *inode);

118 
rubix_ömem_t
 *
rubix_¸óã_ömem
(
öode
 *inode);

	@rubix_mkfs.c

1 
	~"rubix_mkfs.h
"

2 
	~<löux/f˙é.h
>

3 
	~<löux/fs.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<sys/°©.h
>

8 
	~<°rög.h
>

9 
	~<löux/ty≥s.h
>

10 
	#C_ASSERT
(
ex¥
Ë
	t__C_ASSERT___
 [”x¥)?1:-1]

	)

11 *
	tfûíame
;

13 
	gnum_blks
;

14 
	tuöt64_t
;

31 
	$wrôe_su≥r_block
()

33 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

34 
su≥r_block_t
 
sb
;

36 
	`mem£t
(&
sb
,0,(
su≥r_block_t
));

38 
	`io˘l
(
fd
, 
BLKGETSIZE
, &
sb
.
‰ì_blocks
);

40 
sb
.
num_¨øys
 = (sb.
‰ì_blocks
)/(8 * 1024);

41 i‡(
sb
.
‰ì_blocks
 % (8 * 1024))

43 
sb
.
num_¨øys
++;

45 
num_blks
 = 
sb
.
num_¨øys
;

48 
su≥r_block
.
≠≥nd_poöt
.
cur_blk
 = 1 ;

49 
su≥r_block
.
≠≥nd_poöt
.
eb_num
 = 0;

50 
su≥r_block
.
≠≥nd_poöt
.
°¨t_blk
 = 0;

51 
su≥r_block
.
≠≥nd_poöt
.
íd_blk
 = 
NUM_BLKS_PER_EB
;

52 
su≥r_block
.
≠≥nd_poöt
.
‰ì_blks
 = 
NUM_BLKS_PER_EB
;

53 
su≥r_block
.
≠≥nd_poöt
.
LAST_EB
 = 
sb
.
‰ì_blocks
 / 
NUM_BLKS_PER_EB
;

55 
	`wrôe
(
fd
, &
sb
,(
su≥r_block_t
));

56 
	`˛o£
(
fd
);

57 
	}
}

59 
	$wrôe_roŸ_öode
()

61 
rubix_öode_t
 
öode
;

62 
i
;

63 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

65 
	`C_ASSERT
((
öode
Ë=
SIZE_ON_DSK_INODE
);

67 
	`l£ek
(
fd
, (
BBMAP_INDEX
 + 2 * 
num_blks
Ë* 
SIZE_ONE_BLOCK
 , 
SEEK_SET
);

68 
	`mem£t
(&
öode
,0,(
rubix_öode_t
));

71 
öode
.
i_mode
 = 
S_IFDIR
 | 
S_IRWXU
;

72 
öode
.
i_©ime
 = 
	`time
(
NULL
);

73 
öode
.
i_˘ime
 = 
	`time
(
NULL
);

74 
öode
.
i_mtime
 = 
	`time
(
NULL
);

75 
öode
.
i_uid
 = 2;

76 
öode
.
i_gid
 = 0;

77 
öode
.
i_size
 = 0;

78 
öode
.
i_∆öks
 = 2;

80 
öode
.
dblocks
[0] = 2 * 
num_blks
 + 3;

81 
i
=1;i<
NUM_BLKS_PER_INODE
;i++)

82 
öode
.
dblocks
[
i
] = 0;

83 
öode
.
i_blocks
 = 1 ;

85 
	`wrôe
(
fd
, &
öode
,(
rubix_öode_t
));

86 
	`˛o£
(
fd
);

88 #i‡
TEST


89 
rubix_öode_t
 
buf
;

90 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

91 
	`l£ek
(
fd
, (
BBMAP_INDEX
 + 2 * 
num_blks
Ë* 
SIZE_ONE_BLOCK
 , 
SEEK_SET
);

93 
	`ªad
(
fd
,&
buf
,(
rubix_öode_t
));

94 if(
buf
.
i_mode
 =
öode
.i_modê&& buf.
dblocks
[0] == inode.dblocks[0])

96 
	`¥ötf
("D⁄êwôhÑoŸ.. :%d :%Œu \n",
buf
.
i_mode
, buf.
dblocks
[0]);

100 
	`¥ötf
("Something is wrong .. check code ..\n");

101 
	`exô
(0);

103 
	`˛o£
(
fd
);

106 
	}
}

108 
	$wrôe_öode
(
i
)

110 
rubix_öode_t
 
öode
;

111 
off£t
,
ªt
,
j
;

112 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

114 
off£t
 = (
rubix_öode_t
Ë* 
i
;

115 
	`l£ek
(
fd
, ((
BBMAP_INDEX
 + 2 * 
num_blks
Ë* 
SIZE_ONE_BLOCK
Ë+ 
off£t
 , 
SEEK_SET
);

117 
	`mem£t
(&
öode
,0,(
rubix_öode_t
));

120 
öode
.
i_mode
 = 0777;

121 
öode
.
i_©ime
 = 
	`time
(
NULL
);

122 
öode
.
i_˘ime
 = 
	`time
(
NULL
);

123 
öode
.
i_mtime
 = 
	`time
(
NULL
);

124 
öode
.
i_uid
 = 2;

125 
öode
.
i_gid
 = 0;

126 
öode
.
i_∆öks
 = 1;

127 
öode
.
i_size
 = 0;

129 
j
=0;j<
NUM_BLKS_PER_INODE
;j++)

130 
öode
.
dblocks
[
j
] = 0;

131 
öode
.
i_blocks
 = 0;

132 
ªt
 = 
	`wrôe
(
fd
, &
öode
,(
rubix_öode_t
));

133 
	`¥ötf
("Àn:%d",
ªt
);

134 
	`˛o£
(
fd
);

136 #i‡
TEST


137 
rubix_öode_t
 
buf
;

138 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

139 
	`l£ek
(
fd
, ((
BBMAP_INDEX
 + 2 * 
num_blks
Ë* 
SIZE_ONE_BLOCK
Ë+ 
off£t
 , 
SEEK_SET
);

141 
	`ªad
(
fd
,&
buf
,(
rubix_öode_t
));

142 if(
buf
.
i_mode
 =
öode
.i_modê&& buf.
dblocks
[0] =öode.dblocks[0] && buf.
i_size
 == inode.i_size &&

143 
buf
.
i_blocks
 =
öode
.i_blocks)

145 
	`¥ötf
("Wrôög othîÇodes.. :%d :%Œu %d %lu %d \n",
buf
.
i_mode
, buf.
dblocks
[0],buf.
i_blocks
 ,
off£t
/(
rubix_öode_t
),offset);

149 
	`¥ötf
("Something is wrong .. check code ..\n");

150 
	`exô
(0);

152 
	`˛o£
(
fd
);

154 
	}
}

156 
	$wrôe_bm≠_öode
()

158 
uöt8_t
 
bm≠_öode
[1024];

159 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

160 
i
;

163 
	`l£ek
(
fd
,
IBMAP_INDEX
 * 
SIZE_ONE_BLOCK
 , 
SEEK_SET
);

165 
	`mem£t
(&
bm≠_öode
,0,1024);

166 
bm≠_öode
[0] |= (1 << 0);

167 
	`wrôe
(
fd
, &
bm≠_öode
, 1024);

170 
i
=1;i<
num_blks
;i++)

172 
	`mem£t
(&
bm≠_öode
,0,1024);

173 
	`wrôe
(
fd
, &
bm≠_öode
, 1024);

176 
	`˛o£
(
fd
);

177 #i‡
TEST


178 
uöt8_t
 
ã°_byã
;

180 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

181 
	`l£ek
(
fd
, 
IBMAP_INDEX
 * 
SIZE_ONE_BLOCK
 , 
SEEK_SET
);

184 
	`ªad
(
fd
,&
ã°_byã
,1);

186 if(
ã°_byã
 != 1)

188 
	`¥ötf
("exôög inodêbm≠ :%u",
ã°_byã
);

189 
	`exô
(0);

193 
	`¥ötf
("öodêbm≠ :%u",
ã°_byã
);

197 
	}
}

201 
	$wrôe_bm≠_blocks
()

204 
uöt8_t
 
bm≠_blocks
[1024];

205 
i
;

206 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

208 
	`l£ek
(
fd
, (
BBMAP_INDEX
 + 
num_blks
Ë* 
SIZE_ONE_BLOCK
 , 
SEEK_SET
);

211 
i
=0;i<
num_blks
;i++)

213 
	`mem£t
(&
bm≠_blocks
,0,1024);

214 
	`wrôe
(
fd
, &
bm≠_blocks
, 1024);

218 #i‡
TEST


219 if(
bm≠_blocks
[0] != 0)

221 
	`¥ötf
("exôög block bôm≠ :%u",
bm≠_blocks
[0]);

222 
	`exô
(0);

226 if((
bm≠_blocks
[0]) & (1 << 7))

228 
	`¥ötf
("exôög wdôh :%ld",(
bm≠_blocks
[0]));

229 
	`exô
(0);

234 
	`˛o£
(
fd
);

235 
	}
}

239 
	$maö
(
¨gc
, *
¨gv
[])

241 
i
;

242 
fûíame
 = 
¨gv
[1];

244 i‡(
fûíame
 =
NULL
)

246 
	`¥ötf
("Enterá fileÇame which will be usedÅo keepÅrack.\n");

247 
	`exô
(0);

252 
	`wrôe_su≥r_block
();

254 
	`¥ötf
("numblk†:%ld \n",
num_blks
);

256 
	`wrôe_bm≠_öode
();

258 
	`¥ötf
("done.2..\n");

260 
	`wrôe_bm≠_blocks
();

262 
	`¥ötf
("done.3..\n");

264 
	`wrôe_roŸ_öode
();

266 
	`¥ötf
("done.4..\n");

267 
i
=1;i<
NUM_INODES_FS
;i++)

270 
	`wrôe_öode
(
i
);

272 #i‡
TEST


273 
uöt8_t
 
ã°_byã
;

275 
fd
 = 
	`›í
(
fûíame
,
O_RDWR
,0);

276 
	`l£ek
(
fd
, 
IBMAP_INDEX
 * 
SIZE_ONE_BLOCK
 , 
SEEK_SET
);

279 
	`ªad
(
fd
,&
ã°_byã
,1);

281 if(
ã°_byã
 != 1)

283 
	`¥ötf
("exôög inodêbm≠ :%u",
ã°_byã
);

284 
	`exô
(0);

288 
	`¥ötf
("èû inodêbm≠ :%u",
ã°_byã
);

292 
	}
}

	@rubix_mkfs.h

1 #i‚de‡
__RUBIX_MKFS__


2 
	#__RUBIX_MKFS__


	)

4 
	tuöt32_t
;

5 
	tuöt16_t
;

6 
	tuöt8_t
;

7 
	tuöt64_t
;

9 
	#NUM_ENTRY_PER_BLK


	)

10 
	#NUM_BLKS_PER_EB
 20 * 1024

11 
	#SIZE_ONE_BLOCK
 1024

12 
	#NUM_BLKS_PER_INODE
 12

13 
	#IDX_INDIRECT_BLK
 8

14 
	#IDX_INDIRECT_BLK2
 520

15 
	#IDX_INDIRECT_BLK3
 ((512 * 512 + 520))

16 
	#NUM_INODES_FS
 16

17 
	#SIZE_ON_DSK_INODE
 128

18 
	#NUM_INODES_PER_BLK
 (
SIZE_ONE_BLOCK
/
SIZE_ON_DSK_INODE
)

	)

19 
	#SIZE_FS_BLKS
 
NUM_BLKS_PER_INODE
 * 
NUM_INODES_FS


	)

20 
	#RUBIX_FILE_LEN
 10

	)

21 
	#ROOT
 0

	)

22 
	#INODE_INDEX
 3

	)

23 
	#IBMAP_INDEX
 1

	)

24 
	#BBMAP_INDEX
 2

	)

25 
	#TEST
 1

	)

26 
	#DUMPCODE
 1

	)

27 
	#kas£π
(
ex¥
Ë
	`BUG_ON
(!”x¥))

	)

28 
	#CHECKPOINT
 0

	)

33 
	s_dú_íåy


35 
uöt32_t
 
	möode
;

36 
uöt16_t
 
	mªc_Àn
;

37 
uöt16_t
 
	m«me_Àn
;

38 
	m«me
[
RUBIX_FILE_LEN
];

39 
uöt8_t
 
	mfûe_ty≥
;

40 }
	trubix_dú_íåy_t
;

42 
	s_rubix_öode


44 
uöt16_t
 
	mi_mode
;

45 
uöt16_t
 
	mi_uid
;

46 
uöt16_t
 
	mi_gid
;

47 
uöt16_t
 
	mi_∆öks
;

48 
uöt32_t
 
	mi_©ime
;

49 
uöt32_t
 
	mi_mtime
;

51 
uöt64_t
 
	mi_size
;

52 
uöt64_t
 
	mdblocks
[
NUM_BLKS_PER_INODE
];

53 
uöt32_t
 
	mi_blocks
;

54 
uöt32_t
 
	mi_˘ime
;

55 }
	trubix_öode_t
;

57 
	s_as£π_ã°


59 
uöt16_t
 
	mi_mode
;

60 
uöt16_t
 
	mi_uid
;

61 
uöt16_t
 
	mi_size
;

63 
uöt16_t
 
	mi_gid
;

64 
	mmytime
[10];

65 
uöt16_t
 
	mi_∆öks
;

66 
uöt16_t
 
	mi_blocks
;

69 }
	tã°_as£π_t
;

72 
	s_îa£_block_


74 
uöt64_t
 
	meb_num
;

75 
uöt64_t
 
	m‰ì_blks
;

76 
uöt64_t
 
	m°¨t_blk
;

77 
uöt64_t
 
	míd_blk
;

78 
uöt64_t
 
	mcur_blk
;

79 
uöt64_t
 
	mLAST_EB
;

80 }
	tEB
;

82 
	s__su≥r_block__


84 
uöt64_t
 
	m‰ì_blocks
;

85 
uöt64_t
 
	mnum_¨øys
;

87 
EB
 *
	m≠≥nd_poöt
;

88 }
	tsu≥r_block_t
;

90 
	s__öode_íåy__


92 
uöt64_t
 
	mblk
;

93 
uöt64_t
 
	moff£t
;

95 }
	töode_íåy
;

97 
	s__öode_èbÀ__


99 
öode_íåy
 **
	mi_ít
;

100 }
	töode_èbÀ
;

	@rubix_test.c

2 
	~"rubix_fûe_sy°em.h
"

5 
	gglobÆ_hash
[20]={0};

7 
	$buûd_hash
(
öo
)

9 
globÆ_hash
[
öo
] = 1;

10 
	}
}

12 
	$ªmove_hash
(
öo
)

14 
globÆ_hash
[
öo
] = 0;

15 
	}
}

17 
	$dump_hash
()

19 
i
;

20 
i
=0;i<20;i++)

22 if(
globÆ_hash
[
i
])

23 
	`¥ötk
("öo:%d",
i
);

25 
	`¥ötk
("\n");

26 
	}
}

28 
	$£¨ch_hash
(
öo
)

30  (
globÆ_hash
[
öo
]);

31 
	}
}

33 
	$dump_díåy
(
rubix_dú_íåy_t
 *
dú
)

35 
	`BUG_ON
(
dú
 =
NULL
);

37 
	`¥ötk
(" Name: %s",
dú
->
«me
);

38 
	`¥ötk
(" size:%d",
dú
->
ªc_Àn
);

39 
	`¥ötk
(" inode:%d \n",
dú
->
öode
);

40 
	}
}

42 
	$dump_Æl_íåy
(
öode
 *
dú
)

44 
off£t
;

45 
buf„r_hód
 *
bh
;

46 
rubix_dú_íåy_t
 *
dõ¡ry
 = 
NULL
;

47 
rubix_ömem_t
 *
ö
 = 
	`rubix_¸óã_ömem
(
dú
);

48 
su≥r_block
 *
sb
 = 
dú
->
i_sb
;

50 
off£t
 = 0;

51 
bh
 = 
	`sb_bªad
(
sb
,
ö
->
dblocks
[0]);

52 
off£t
 < 
dú
->
i_size
)

54 
dõ¡ry
 = (
rubix_dú_íåy_t
 *)(
bh
->
b_d©a
 + 
off£t
);

55 
	`dump_díåy
(
dõ¡ry
);

56 
off£t
+=64;

58 
	}
}

61 
	$vîify_m¨k_öode
(
öode
 *inode)

63 
was_dúty
;

64 
	`BUG_ON
(
öode
 =
NULL
);

65 
was_dúty
 = 
öode
->
i_°©e
 & 
I_DIRTY
;

67 i‡(!
was_dúty
)

69 
bdi_wrôeback
 *
wb
 = &
öode
->
i_m≠pög
->
backög_dev_öfo
->wb;

70 
backög_dev_öfo
 *
bdi
;

71 
	`BUG_ON
(
wb
 =
NULL
);

72 
bdi
 = 
wb
->bdi;

74 
	`BUG_ON
(
bdi
 =
NULL
);

75 i‡(
	`bdi_ˇp_wrôeback_dúty
(
bdi
Ë&& !
	`ã°_bô
(
BDI_ªgi°îed
, &bdi->
°©e
))

77 
	`¥ötk
("bdi-%†nŸÑegi°îed\n",
bdi
->
«me
);

79 
öode
->
dútõd_whí
 = 
jiffõs
;

80 
	`li°_move
(&
öode
->
i_wb_li°
, &
bdi
->
wb
.
b_dúty
);

84 
	`¥ötk
("wa†dúty :%d",
was_dúty
);

86 
	}
}

	@rubix_test.h

1 #i‚de‡
__RUBIX_TEST__


2 
	#__RUBIX_TEST__


	)

4 
	göode
;

6 
	g_dú_íåy
;

7 
buûd_hash
(
öo
);

8 
ªmove_hash
(
öo
);

10 
dump_hash
();

11 
£¨ch_hash
(
öo
);

12 
dump_díåy
(
_dú_íåy
 *
dú
);

14 
dump_Æl_íåy
(
öode
 *
dú
);

15 
vîify_m¨k_öode
(
öode
 *inode);

	@worker.c

1 
	~<löux/w‹kqueue.h
>

2 
	~<löux/sched.h
>

3 
	~<löux/mm.h
>

4 
	~<löux/waô.h
>

5 
	~<löux/hash.h
>

6 
	~<löux/dñay.h
>

7 
	~<löux/¶ab.h
>

11 
__rubix_c⁄dv¨_t
 
	trubix_c⁄dv¨_t
;

13 
__©åibuã__
((
	$Æig√d
(8))Ë
__rubix_c⁄dv¨_t
 {

14 
dummy
[152];

15 
	}
};

17 
	srubix_w‹kî_°ru˘_


19 
rubix_c⁄dv¨_t
 
	mcv
;

20 
	md⁄e
;

21 
w‹k_°ru˘
 
	mwq
;

22 }
	trbx_w‹kî_t
;

28 
	$c⁄dv¨_sig«l
(
rubix_c⁄dv¨_t
 *
cv
)

30 
waô_queue_hód_t
 *
q
 = (waô_queue_hód_à*)
cv
;

33 
	`wake_up
(
q
);

34 
	}
}

37 
	$c⁄dv¨_brﬂdˇ°
(
rubix_c⁄dv¨_t
 *
cv
)

39 
waô_queue_hód_t
 *
q
 = (waô_queue_hód_à*)
cv
;

41 
	`wake_up_Æl
(
q
);

42 
	}
}

44 
	$c⁄dv¨_waô
(
rubix_c⁄dv¨_t
 *
cv
)

46 
waô_queue_hód_t
 *
q
 = (waô_queue_hód_à*)
cv
;

48 
	`DEFINE_WAIT
(
_waô
);

50 
	`¥ï¨e_to_waô_ex˛usive
(
q
, &
_waô
, 
TASK_INTERRUPTIBLE
);

51 
	`scheduÀ
();

53 
	`föish_waô
(
q
, &
_waô
);

54 
	}
}

56 
	$c⁄dv¨_öô
(
rubix_c⁄dv¨_t
 *
cv
)

58 
waô_queue_hód_t
 *
q
 = (waô_queue_hód_à*)
cv
;

60 
	`öô_waôqueue_hód
(
q
);

61 
	}
}

69 
	$thªad_fun˘i⁄
(
w‹k_°ru˘
 *
w‹k
)

71 
rbx_w‹kî_t
 *
rbx_w‹k
 = 
	`c⁄èöî_of
(
w‹k
,Ñbx_w‹kî_t, 
wq
);

72 
	`¥ötk
("InÅhread function ..\n");

73 
rbx_w‹k
->
d⁄e
=1;

74 
	`c⁄dv¨_sig«l
(&
rbx_w‹k
->
cv
);

75 
	}
}

77 
	$¸óã_w‹kî
(
rbx_w‹kî_t
 *
rbx_w‹k
)

80 
	`INIT_WORK
((
w‹k_°ru˘
 *Ë&
rbx_w‹k
->
wq
, (
w‹k_func_t
Ë
thªad_fun˘i⁄
);

82 
	`scheduÀ_w‹k
((
w‹k_°ru˘
 *)&
rbx_w‹k
->
wq
);

84 !
rbx_w‹k
->
d⁄e
)

86 
	`c⁄dv¨_waô
(&
rbx_w‹k
->
cv
);

88 
	`¥ötk
("Done withÅheÅhread..\n");

89 
	}
}

91 *
	$öô_w‹kî_thªads
()

93 
rbx_w‹kî_t
 *
rbx_w‹k
 = 
NULL
;

95 
rbx_w‹k
 = (
rbx_w‹kî_t
 *)
	`kmÆloc
(((*rbx_w‹k)),
GFP_KERNEL
);

96 i‡(
rbx_w‹k
)

98 
	`c⁄dv¨_öô
(&
rbx_w‹k
->
cv
);

100 
rbx_w‹k
->
d⁄e
 = 0;

102 
	`¸óã_w‹kî
(
rbx_w‹k
);

104  (*)
rbx_w‹k
;

105 
	}
}

107 
	$de°roy_w‹kî_thªads
(*
rbx_
)

109 
rbx_w‹kî_t
 *
rbx_w‹k
 = (rbx_w‹kî_à*)
rbx_
;

110 
	`k‰ì
(
rbx_w‹k
);

111 
	}
}

	@/usr/include/linux/fcntl.h

1 #i‚de‡
_LINUX_FCNTL_H


2 
	#_LINUX_FCNTL_H


	)

4 
	~<asm/f˙é.h
>

6 
	#F_SETLEASE
 (
F_LINUX_SPECIFIC_BASE
 + 0)

	)

7 
	#F_GETLEASE
 (
F_LINUX_SPECIFIC_BASE
 + 1)

	)

13 
	#F_CANCELLK
 (
F_LINUX_SPECIFIC_BASE
 + 5)

	)

16 
	#F_DUPFD_CLOEXEC
 (
F_LINUX_SPECIFIC_BASE
 + 6)

	)

22 
	#F_NOTIFY
 (
F_LINUX_SPECIFIC_BASE
+2)

	)

27 
	#F_SETPIPE_SZ
 (
F_LINUX_SPECIFIC_BASE
 + 7)

	)

28 
	#F_GETPIPE_SZ
 (
F_LINUX_SPECIFIC_BASE
 + 8)

	)

33 
	#DN_ACCESS
 0x00000001

	)

34 
	#DN_MODIFY
 0x00000002

	)

35 
	#DN_CREATE
 0x00000004

	)

36 
	#DN_DELETE
 0x00000008

	)

37 
	#DN_RENAME
 0x00000010

	)

38 
	#DN_ATTRIB
 0x00000020

	)

39 
	#DN_MULTISHOT
 0x80000000

	)

41 
	#AT_FDCWD
 -100

	)

44 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

45 
	#AT_REMOVEDIR
 0x200

	)

47 
	#AT_SYMLINK_FOLLOW
 0x400

	)

48 
	#AT_NO_AUTOMOUNT
 0x800

	)

49 
	#AT_EMPTY_PATH
 0x1000

	)

	@/usr/include/linux/fs.h

1 #i‚de‡
_LINUX_FS_H


2 
	#_LINUX_FS_H


	)

9 
	~<löux/limôs.h
>

10 
	~<löux/io˘l.h
>

11 
	~<löux/ty≥s.h
>

24 #unde‡
NR_OPEN


25 
	#INR_OPEN_CUR
 1024

	)

26 
	#INR_OPEN_MAX
 4096

	)

28 
	#BLOCK_SIZE_BITS
 10

	)

29 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

31 
	#SEEK_SET
 0

	)

32 
	#SEEK_CUR
 1

	)

33 
	#SEEK_END
 2

	)

34 
	#SEEK_DATA
 3

	)

35 
	#SEEK_HOLE
 4

	)

36 
	#SEEK_MAX
 
SEEK_HOLE


	)

38 
	sf°rim_ønge
 {

39 
__u64
 
	m°¨t
;

40 
__u64
 
	mÀn
;

41 
__u64
 
	mmöÀn
;

45 
	sfûes_°©_°ru˘
 {

46 
	mƒ_fûes
;

47 
	mƒ_‰ì_fûes
;

48 
	mmax_fûes
;

51 
	söodes_°©_t
 {

52 
	mƒ_öodes
;

53 
	mƒ_unu£d
;

54 
	mdummy
[5];

58 
	#NR_FILE
 8192

	)

64 
	#MS_RDONLY
 1

	)

65 
	#MS_NOSUID
 2

	)

66 
	#MS_NODEV
 4

	)

67 
	#MS_NOEXEC
 8

	)

68 
	#MS_SYNCHRONOUS
 16

	)

69 
	#MS_REMOUNT
 32

	)

70 
	#MS_MANDLOCK
 64

	)

71 
	#MS_DIRSYNC
 128

	)

72 
	#MS_NOATIME
 1024

	)

73 
	#MS_NODIRATIME
 2048

	)

74 
	#MS_BIND
 4096

	)

75 
	#MS_MOVE
 8192

	)

76 
	#MS_REC
 16384

	)

77 
	#MS_VERBOSE
 32768

	)

79 
	#MS_SILENT
 32768

	)

80 
	#MS_POSIXACL
 (1<<16Ë

	)

81 
	#MS_UNBINDABLE
 (1<<17Ë

	)

82 
	#MS_PRIVATE
 (1<<18Ë

	)

83 
	#MS_SLAVE
 (1<<19Ë

	)

84 
	#MS_SHARED
 (1<<20Ë

	)

85 
	#MS_RELATIME
 (1<<21Ë

	)

86 
	#MS_KERNMOUNT
 (1<<22Ë

	)

87 
	#MS_I_VERSION
 (1<<23Ë

	)

88 
	#MS_STRICTATIME
 (1<<24Ë

	)

91 
	#MS_NOSEC
 (1<<28)

	)

92 
	#MS_BORN
 (1<<29)

	)

93 
	#MS_ACTIVE
 (1<<30)

	)

94 
	#MS_NOUSER
 (1<<31)

	)

99 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

104 
	#MS_MGC_VAL
 0xC0ED0000

	)

105 
	#MS_MGC_MSK
 0xffff0000

	)

110 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

111 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

112 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

113 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

114 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

115 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

116 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

117 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

118 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

119 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

120 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

121 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

123 
	#BLKPG
 
	`_IO
(0x12,105)

	)

127 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

128 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

133 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

134 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

135 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

136 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

137 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

138 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

139 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

140 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

141 
	#BLKIOMIN
 
	`_IO
(0x12,120)

	)

142 
	#BLKIOOPT
 
	`_IO
(0x12,121)

	)

143 
	#BLKALIGNOFF
 
	`_IO
(0x12,122)

	)

144 
	#BLKPBSZGET
 
	`_IO
(0x12,123)

	)

145 
	#BLKDISCARDZEROES
 
	`_IO
(0x12,124)

	)

146 
	#BLKSECDISCARD
 
	`_IO
(0x12,125)

	)

147 
	#BLKROTATIONAL
 
	`_IO
(0x12,126)

	)

148 
	#BLKZEROOUT
 
	`_IO
(0x12,127)

	)

150 
	#BMAP_IOCTL
 1

	)

151 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

152 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

153 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

154 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

155 
	#FITRIM
 
	`_IOWR
('X', 121, 
f°rim_ønge
Ë

	)

157 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

158 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

159 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

160 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

161 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

162 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

163 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

164 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

165 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

170 
	#FS_SECRM_FL
 0x00000001

	)

171 
	#FS_UNRM_FL
 0x00000002

	)

172 
	#FS_COMPR_FL
 0x00000004

	)

173 
	#FS_SYNC_FL
 0x00000008

	)

174 
	#FS_IMMUTABLE_FL
 0x00000010

	)

175 
	#FS_APPEND_FL
 0x00000020

	)

176 
	#FS_NODUMP_FL
 0x00000040

	)

177 
	#FS_NOATIME_FL
 0x00000080

	)

179 
	#FS_DIRTY_FL
 0x00000100

	)

180 
	#FS_COMPRBLK_FL
 0x00000200

	)

181 
	#FS_NOCOMP_FL
 0x00000400

	)

182 
	#FS_ECOMPR_FL
 0x00000800

	)

184 
	#FS_BTREE_FL
 0x00001000

	)

185 
	#FS_INDEX_FL
 0x00001000

	)

186 
	#FS_IMAGIC_FL
 0x00002000

	)

187 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

188 
	#FS_NOTAIL_FL
 0x00008000

	)

189 
	#FS_DIRSYNC_FL
 0x00010000

	)

190 
	#FS_TOPDIR_FL
 0x00020000

	)

191 
	#FS_EXTENT_FL
 0x00080000

	)

192 
	#FS_DIRECTIO_FL
 0x00100000

	)

193 
	#FS_NOCOW_FL
 0x00800000

	)

194 
	#FS_RESERVED_FL
 0x80000000

	)

196 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

197 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

200 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

201 
	#SYNC_FILE_RANGE_WRITE
 2

	)

202 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

	@/usr/include/linux/sched.h

1 #i‚de‡
_LINUX_SCHED_H


2 
	#_LINUX_SCHED_H


	)

7 
	#CSIGNAL
 0x000000f‡

	)

8 
	#CLONE_VM
 0x00000100

	)

9 
	#CLONE_FS
 0x00000200

	)

10 
	#CLONE_FILES
 0x00000400

	)

11 
	#CLONE_SIGHAND
 0x00000800

	)

12 
	#CLONE_PTRACE
 0x00002000

	)

13 
	#CLONE_VFORK
 0x00004000

	)

14 
	#CLONE_PARENT
 0x00008000

	)

15 
	#CLONE_THREAD
 0x00010000

	)

16 
	#CLONE_NEWNS
 0x00020000

	)

17 
	#CLONE_SYSVSEM
 0x00040000

	)

18 
	#CLONE_SETTLS
 0x00080000

	)

19 
	#CLONE_PARENT_SETTID
 0x00100000

	)

20 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

21 
	#CLONE_DETACHED
 0x00400000

	)

22 
	#CLONE_UNTRACED
 0x00800000

	)

23 
	#CLONE_CHILD_SETTID
 0x01000000

	)

26 
	#CLONE_NEWUTS
 0x04000000

	)

27 
	#CLONE_NEWIPC
 0x08000000

	)

28 
	#CLONE_NEWUSER
 0x10000000

	)

29 
	#CLONE_NEWPID
 0x20000000

	)

30 
	#CLONE_NEWNET
 0x40000000

	)

31 
	#CLONE_IO
 0x80000000

	)

36 
	#SCHED_NORMAL
 0

	)

37 
	#SCHED_FIFO
 1

	)

38 
	#SCHED_RR
 2

	)

39 
	#SCHED_BATCH
 3

	)

41 
	#SCHED_IDLE
 5

	)

43 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/linux/wait.h

1 #i‚de‡
_LINUX_WAIT_H


2 
	#_LINUX_WAIT_H


	)

4 
	#WNOHANG
 0x00000001

	)

5 
	#WUNTRACED
 0x00000002

	)

6 
	#WSTOPPED
 
WUNTRACED


	)

7 
	#WEXITED
 0x00000004

	)

8 
	#WCONTINUED
 0x00000008

	)

9 
	#WNOWAIT
 0x01000000

	)

11 
	#__WNOTHREAD
 0x20000000

	)

12 
	#__WALL
 0x40000000

	)

13 
	#__WCLONE
 0x80000000

	)

16 
	#P_ALL
 0

	)

17 
	#P_PID
 1

	)

18 
	#P_PGID
 2

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

329 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

330 #i‡
_FORTIFY_SOURCE
 > 1

331 
	#__USE_FORTIFY_LEVEL
 2

	)

333 
	#__USE_FORTIFY_LEVEL
 1

	)

336 
	#__USE_FORTIFY_LEVEL
 0

	)

341 
	~<°dc-¥edef.h
>

349 #unde‡
__GNU_LIBRARY__


350 
	#__GNU_LIBRARY__
 6

	)

354 
	#__GLIBC__
 2

	)

355 
	#__GLIBC_MINOR__
 17

	)

357 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

358 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

361 #i‡
deföed
 
__GNUC__
 \

362 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

363 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

364 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

365 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

369 #i‚de‡
__ASSEMBLER__


370 #i‚de‡
_SYS_CDEFS_H


371 
	~<sys/cdefs.h
>

376 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


377 
	#__USE_LARGEFILE
 1

	)

378 
	#__USE_LARGEFILE64
 1

	)

384 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

385 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

386 && 
deföed
 
	g__exã∫_ölöe


387 
	#__USE_EXTERN_INLINES
 1

	)

395 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/linux/stddef.h

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	~<bôs/¥edefs.h
>

34 
	#__STDC_ISO_10646__
 201103L

	)

37 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
40
826
bitmaps.c
btree.c
btree.h
rbtree.c
rubix_dir_ops.c
rubix_file_ops.c
rubix_file_ops.h
rubix_file_system.c
rubix_file_system.h
rubix_mkfs.c
rubix_mkfs.h
rubix_test.c
rubix_test.h
worker.c
/usr/include/linux/fcntl.h
/usr/include/linux/fs.h
/usr/include/linux/kernel.h
/usr/include/linux/sched.h
/usr/include/linux/types.h
/usr/include/linux/wait.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/linux/posix_types.h
/usr/include/linux/sysinfo.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/linux/stddef.h
/usr/include/stdc-predef.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
